{"version":3,"sources":["components/movielist/posterplaceholder.jpg","components/history.js","apis/tmdb/key.js","apis/tmdb/tmdb.js","apis/youtube/youtube.js","actions/index.js","actions/types.js","components/Helper/Searchbar.js","components/Navigation/Navigation.js","components/Helper/Loader.js","components/Helper/RemoveFavoriteButton.js","components/movielist/MovieCard.js","components/movielist/MovieList.js","pages/PopularMovies.js","pages/UpcomingMovies.js","pages/Search.js","pages/Favorites.js","components/moviepage/layouts/LeftLayout.js","components/moviepage/layouts/BottomLayout.js","components/moviepage/Navbar.js","components/Helper/Button.js","components/Helper/Trailer.js","components/Helper/AddFavoriteButton.js","components/moviepage/Details.js","components/moviepage/images/ImageModal.js","components/moviepage/ComposedScrollContainer.js","components/moviepage/images/Images.js","components/moviepage/videos/VideoDetail.js","components/moviepage/ScrollContainer.js","components/moviepage/videos/VideoItem.js","components/moviepage/videos/VideoList.js","components/moviepage/videos/Videos.js","apis/youtube/key.js","components/moviepage/credits/Cast.js","components/moviepage/credits/Crew.js","components/moviepage/credits/Credits.js","pages/NewMoviePage.js","components/App.js","reducers/favoritesReducer.js","reducers/singleMovieReducer.js","reducers/multipleMoviesReducer.js","reducers/movieTrailersReducer.js","reducers/index.js","index.js"],"names":["module","exports","history","createBrowserHistory","basename","TMDB_API_KEY","process","axios","create","baseURL","params","api_key","fetchMovies","url","query","dispatch","a","type","payload","tmdb","get","response","Promise","all","data","results","map","movie","id","responseDetails","details","console","error","onVideoSelect","video","log","removeFavorite","getState","favorites","favoritesList","filter","item","StyledForm","styled","form","props","inlineForm","StyledInput","input","StyledButton","button","SearchIcon","FontAwesomeIcon","attrs","icon","faSearch","connect","state","submittedQuery","movies","inline","useState","setQuery","location","useLocation","useHistory","useEffect","pathname","onSubmit","e","event","preventDefault","push","handleSearchSubmit","placeholder","name","autoComplete","value","onChange","target","StyledLink","NavLink","StyledNavbar","nav","linkStyle","Navigation","isMobile","useMediaQuery","activeStyle","boxShadow","rootLocations","setLinkStyle","find","path","changeLinksforLocation","exact","to","Searchbar","rotate","keyframes","scale","Container","div","Spinner","Spinner5","Loader","DeleteButton","DeleteIcon","Delete","RemoveFavoriteButton","onClick","CardContainer","StyledImg","img","StyledRuntime","RuntimeIcon","faStopwatch","StyledRating","RatingIcon","faStar","handleMovieClick","navigationPath","runtime","useRouteMatch","poster_path","title","vote_average","renderRuntime","renderRating","imageURL","convertedRuntime","num","hours","rhours","Math","floor","minutes","round","convertRuntime","src","AltPoster","alt","removeMode","MovieContainer","renderMovieCards","key","Wrapper","PageText","h1","isError","isLoading","ErrorText","currentDate","Date","setDate","getDate","searchDate","toISOString","substring","todayDate","SearchContainer","RemoveModeButton","ButtonContainer","toggleRemove","setToggleRemove","length","Content","Background","Left","Right","posterPath","ContentContainer","LeftLayout","children","backdropImage","Content2","Bot","Top","ContentContainer2","BottomLayout","color","backdrops","images","videos","AddButton","PlusIcon","Plus","AddFavoriteButton","Play","BackButton","Link","CenterContainer","BottomContainer","DetailContainer","Header","MovieTitle","DetailTitle","Text","p","MoviePlot","ChevronLeft","TaglineText","h3","addFavorite","newArray","deepClone","JSON","parse","stringify","slice","genresArray","genres","convertedReleaseDate","moment","release_date","isInFavorites","tagline","join","style","display","marginTop","marginLeft","overview","revenue","toLocaleString","budget","format","Button","ImageContainer","Heading","ModalImage","ScrollButton","CloseButton","Controls","ProgressText","ImageModal","clickedImage","onModalClose","ariaLabel","role","modalImageSource","setModalImageSource","left","right","controls","setControls","currentIndex","findIndex","file_path","buttonRef","useRef","current","focus","ReactDOM","createPortal","aria-modal","tabIndex","aria-label","onKeyDown","keyCode","stopPropagation","as","ref","node","prevImage","nextImage","document","body","HorizontalContainer","scrollArrow","NewScrollButton","PrevIcon","ChevronsDown","NextIcon","ScrollLeft","ScrollRight","ComposedScrollContainer","scrollDistance","refContainer","setOverflowPresent","canScrollRight","setCanScrollRight","canScrollLeft","setCanScrollLeft","checkForOverflow","hasOverflow","scrollWidth","clientWidth","checkForScrollPosition","scrollLeft","debounceCheckForScrollPosition","debounce","scrollContainerBy","distance","scrollBy","behavior","useSpring","transform","set","clamp","clampAt","bind","useScroll","scrolling","delta","addEventListener","SpringContainer","animated","MovieImage","posters","modalIsOpen","setModalIsOpen","imageClick","setImageClick","toggleScrollLock","bool","changeFocus","image","filepath","YetAnotherDiv","PlayerWrapper","VideoPlayer","iframe","trailers","clickedVideo","videoSrc","allowFullScreen","frameBorder","ArrowLeftCircle","direction","VideoWrapper","VideoThumbnail","PlayCircle","snippet","thumbnails","medium","VideoContainer","VideoHideButton","FlexContainer","fetchTrailers","trailerIds","youtube","part","items","trailerKeys","AnimatedCastCard","TextContainer","CastImg","CastText","ActorText","cast","credits","person","profile_path","character","CrewContainer","CrewColumn","CrewHeading","CrewText","MainTitle","crew","findPersonWithJob","jobName","searchedPerson","job","director","composer","writers","Credits","MasterWrap","withRouter","clickedMovieId","fetchMovie","isMobileOrTablet","urlMovieId","match","fetchUrl","posterURL","ROOT_PATH","CREDITS_PATH","IMAGES_PATH","VIDEOS_PATH","GlobalStyle","createGlobalStyle","normalize","from","component","PopularMovies","UpcomingMovies","Search","Favorites","NewMoviePage","INITIAL_STATE","combineReducers","action","store","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","reduxThunk","render","querySelector"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,+C,iLCQ5BC,EALCC,YAAqB,CAAEC,SAAU,gB,uECHpCC,EAAeC,mC,iBCIbC,MAAMC,OAAO,CAC1BC,QAAS,+BACTC,OAAQ,CACNC,QAAQ,GAAD,OAAKN,MCHDE,MAAMC,OAAO,CAC1BC,QAAS,0CC0CEG,EAAc,SAACC,GAAD,IAAMC,EAAN,uDAAc,GAAd,8CAAqB,WAAMC,GAAN,eAAAC,EAAA,6DAC1CF,GACFC,EAAS,CAAEE,KCtCuB,yBDsCOC,QAASJ,IAGpDC,EAAS,CAAEE,KChDyB,2BD2CU,kBAQrBE,EAAKC,IAAIP,GARY,cAQtCQ,EARsC,gBAUtCC,QAAQC,IACZF,EAASG,KAAKC,QAAQC,IAAtB,uCAA0B,WAAMC,GAAN,eAAAX,EAAA,sEACMG,EAAKC,IAAL,6CACUO,EAAMC,GADhB,oBAC8BvB,EAD9B,qBADN,OAClBwB,EADkB,OAKxBF,EAAMG,QAAUD,EAAgBL,KALR,2CAA1B,wDAX0C,OAoB5CT,EAAS,CAAEE,KC7DuB,yBD6DOC,QAASG,EAASG,KAAKC,UApBpB,kDAsB5CV,EAAS,CAAEE,KChEoB,wBDiE/Bc,QAAQC,MAAM,yBAA0B,kBAAxC,MAvB4C,0DAArB,uDA8CdC,EAAgB,SAAAC,GAE3B,OADAH,QAAQI,IAAI,oBACL,CAAElB,KC7EkB,gBD6EGC,QAASgB,IA+B5BE,EAAiB,SAAAT,GAAK,OAAI,SAACZ,EAAUsB,GAKhDtB,EAAS,CAAEE,KCnHmB,mBDmHKC,QAJTmB,IAAWC,UAA7BC,cAE2BC,QAAO,SAAAC,GAAI,OAAIA,EAAKb,KAAOD,EAAMC,U,owCEtHtE,IAAMc,EAAaC,UAAOC,KAAV,KACJ,SAAAC,GAAK,OAAKA,EAAMC,WAAa,yBAA2B,WAI9DC,EAAcJ,UAAOK,MAAV,KACN,SAAAH,GAAK,OAAKA,EAAMC,WAAa,QAAU,UACtC,SAAAD,GAAK,OAAKA,EAAMC,WAAa,GAAK,SAqBjC,SAAAD,GAAK,OAAKA,EAAMC,WAAa,MAAQ,UACpC,SAAAD,GAAK,OAAKA,EAAMC,WAAa,GAAK,WAInC,SAAAD,GAAK,OAAKA,EAAMC,WAAa,MAAQ,UACpC,SAAAD,GAAK,OAAKA,EAAMC,WAAa,GAAK,WAI1CG,EAAeN,UAAOO,OAAV,KACP,SAAAL,GAAK,OAAKA,EAAMC,WAAa,QAAU,YACtC,SAAAD,GAAK,OAAKA,EAAMC,WAAa,QAAU,YAmB7CK,EAAaR,kBAAOS,KAAiBC,MAAM,CAAEC,KAAMC,KAAtCZ,CAAH,KAgEDa,eANS,SAAAC,GACtB,MAAO,CACLC,eAAgBD,EAAME,OAAOD,kBAIO,CAAE9C,eAA3B4C,EAzDA,SAAC,GAA6C,IAA3CI,EAA0C,EAA1CA,OAAQhD,EAAkC,EAAlCA,YAAa8C,EAAqB,EAArBA,eAAqB,EAChCG,mBAAS,IADuB,mBACnD/C,EADmD,KAC5CgD,EAD4C,KAEpDC,EAAWC,cACX9D,EAAU+D,cAiBhBC,qBAAU,WAEJR,GAAwC,YAAtBK,EAASI,UAC7BL,EAASJ,KAEV,CAACA,EAAgBK,IAEpB,IAAMlD,EAAG,gCAA4BR,EAA5B,iCAAiES,EAAjE,mCAET,OACE,kBAAC4B,EAAD,CACEI,WAAYc,EACZQ,SAAU,SAAAC,GAAC,OA1BY,SAACC,EAAOzD,EAAKC,EAAO8C,GAG7C,OAFAU,EAAMC,iBAEFX,GAGFhD,EAAYC,EAAKC,GACVZ,EAAQsE,KAAK,YAGb5D,EAAYC,GAgBJ4D,CAAmBJ,EAAGxD,EAAKC,EAAO8C,KAEjD,kBAACb,EAAD,CACE9B,KAAK,OACLyD,YAAY,SACZC,KAAK,SACLC,aAAa,MACb9B,WAAYc,EACZiB,MAAO/D,EACPgE,SAAU,SAAAR,GAAK,OAAIR,EAASQ,EAAMS,OAAOF,UAE1C9C,QAAQI,IAAIyB,GACb,kBAACX,EAAD,CAAchC,KAAK,SAAS6B,WAAYc,GACtC,kBAACT,EAAD,W,ywCCnHR,IAAM6B,EAAarC,kBAAOsC,IAAPtC,CAAH,KAqBVuC,EAAevC,UAAOwC,IAAV,KAaF,SAAAtC,GAAK,OAAKA,EAAMuC,UAAY,sBAAwB,SAIhEJ,GACS,SAAAnC,GAAK,OAAKA,EAAMuC,UAAY,QAAU,aACjC,SAAAvC,GAAK,OAAKA,EAAMuC,UAAY,OAAS,qBAWjDJ,EASAA,EAQAA,GA2DSK,EArDI,WACjB,IAAMC,EAAWC,wBAAc,CAC7BzE,MAAO,uBAGH0E,EAAc,CAClBC,UAAW,kBAGT1B,EAAWC,cAET0B,EAAgB,CAAC,WAAY,YAAa,UAAW,cAXpC,EAaW7B,oBAAS,GAbpB,mBAahBuB,EAbgB,KAaLO,EAbK,KA8BvB,OAPAzB,qBAAU,YARqB,SAAAH,GACzB2B,EAAcE,MAAK,SAAAC,GAAI,OAAIA,IAAI,UAAQ9B,EAASI,aAC3CwB,GAAa,GAEbA,GAAa,GAKtBG,CAAuB/B,KACtB,CAACA,IAMF,kBAACmB,EAAD,CAAcE,UAAWA,GACvB,kBAACJ,EAAD,CAAYe,OAAK,EAACC,GAAG,WAAWR,YAAaA,GAC1CF,EAAW,UAAY,kBAE1B,kBAACN,EAAD,CAAYgB,GAAG,YAAYR,YAAaA,GACrCF,EAAW,WAAa,mBAE3B,kBAACN,EAAD,CAAYgB,GAAG,aAAaR,YAAaA,GAAzC,aAGuB,YAAtBzB,EAASI,SACR,kBAACa,EAAD,CAAYgB,GAAG,UAAUR,YAAaA,GAAtC,UAIA,kBAACS,EAAD,CAAWrC,QAAM,M,8vBC3HzB,IAAMsC,EAASC,oBAAH,KAUNC,EAAQD,oBAAH,KAMLE,GAAY1D,UAAO2D,IAAV,IAEAF,GAUTG,GAAU5D,kBAAO6D,IAAP7D,CAAH,IACEuD,GAcAO,GATA,WACb,OACE,kBAACJ,GAAD,KACE,kBAACE,GAAD,MACA,iD,0aCrCN,IAAMG,GAAe/D,UAAOO,OAAV,MAcZyD,GAAahE,kBAAOiE,KAAPjE,CAAH,MAeDkE,GARc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC9B,OACE,kBAACJ,GAAD,CAAcI,QAASA,GACrB,kBAACH,GAAD,Q,iyDCjBN,IAAMI,GAAgBpE,UAAO2D,IAAV,MAkDbU,GAAYrE,UAAOsE,IAAV,MAKTC,GAAgBvE,UAAO2D,IAAV,MAUba,GAAcxE,kBAAOS,KAAiBC,MAAM,CAAEC,KAAM8D,KAAtCzE,CAAH,MAKX0E,GAAe1E,UAAO2D,IAAV,MAUZgB,GAAa3E,kBAAOS,KAAiBC,MAAM,CAAEC,KAAMiE,KAAtC5E,CAAH,MAqEDa,eAAQ,KAAM,CAAEgE,iBNxIC,SAAC5F,EAAIiE,GAAL,8CAAc,WAAM9E,GAAN,eAAAC,EAAA,sDAC5CD,EAAS,CAAEE,KCPgB,gBDOKC,QAASU,IAErC6F,EAHwC,UAGpB5B,EAHoB,YAGZjE,EAHY,YAK5C1B,EAAQsE,KAAKiD,GAL+B,2CAAd,uDMwIiBrF,kBAAlCoB,EAhEG,SAAAX,GAAU,IAOtB6E,EANI7B,EAAS8B,cAAT9B,KAEFP,EAAWC,wBAAc,CAAEzE,MAAO,uBAHf,EAKwB+B,EAAMlB,MAA/CiG,EALiB,EAKjBA,YAAaC,EALI,EAKJA,MAAOC,EALH,EAKGA,aAAclG,EALjB,EAKiBA,GAIxC8F,EADE7E,EAAMlB,MAAMG,QACJe,EAAMlB,MAAMG,QAAQ4F,QAEpB7E,EAAMlB,MAAM+F,QAGxB,IAYIK,EAUAC,EAtBEC,EAAQ,yCAAqCL,GAU7CM,EARiB,SAAAC,GACrB,IAAIC,EAAQD,EAAM,GACdE,EAASC,KAAKC,MAAMH,GACpBI,EAA6B,IAAlBJ,EAAQC,GAEvB,OAAOA,EAAS,KADDC,KAAKG,MAAMD,GACQ,IAGXE,CAAehB,GAsBxC,OAnBKpC,GAAwB,IAAZoC,IACfK,EACE,kBAACb,GAAD,KACE,kBAACC,GAAD,MACCe,IAMF5C,GAA6B,IAAjBwC,IACfE,EACE,kBAACX,GAAD,KACE,kBAACC,GAAD,MACCQ,IAML,kBAACf,GAAD,KACE,kBAACC,GAAD,CACE2B,IAAKf,EAAcK,EAAWW,KAC9B9B,QAAS,kBAAMjE,EAAM2E,iBAAiB5F,EAAIiE,IAC1CgD,IAAG,UAAKhB,EAAL,aAEJE,EACAC,EACAnF,EAAMiG,YACL,kBAAC,GAAD,CACEhC,QAAS,kBAAMjE,EAAMT,eAAeS,EAAMlB,c,ikBCpJpD,IAAMoH,GAAiBpG,UAAO2D,IAAV,MA4CL9C,gBANS,SAAAC,GACtB,MAAO,CACLE,OAAQF,EAAME,OAAOA,UAIVH,EAdG,SAAC,GAAgB,IAC3BwF,EAD0B,EAAbrF,OACajC,KAAI,SAAAC,GAAK,OACvC,kBAAC,GAAD,CAAWsH,IAAKtH,EAAMC,GAAID,MAAOA,OAGnC,OAAO,kBAACoH,GAAD,KAAiBC,M,wWChC1B,IAAME,GAAUvG,UAAO2D,IAAV,MAQP6C,GAAWxG,UAAOyG,GAAV,MAuCC5F,gBAPS,SAAAC,GACtB,MAAO,CACL4F,QAAS5F,EAAME,OAAO0F,QACtBC,UAAW7F,EAAME,OAAO2F,aAIY,CAAE1I,eAA3B4C,EA7BO,SAAC,GAAyC,IAAvC6F,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,UAAW1I,EAAkB,EAAlBA,YACrCC,EAAG,kCAA8BR,EAA9B,0FAMT,OAJA6D,qBAAU,WACRtD,EAAYC,KACX,CAACD,EAAaC,IAGf,kBAACqI,GAAD,KACE,kBAACC,GAAD,mCACCE,GAAW,oEACXC,EACC,kBAAC,GAAD,MAEA,oCACE,kBAAC,GAAD,W,iYChCV,IAAMJ,GAAUvG,UAAO2D,IAAV,MAQP6C,GAAWxG,UAAOyG,GAAV,MAMRG,GAAY5G,kBAAOwG,GAAPxG,CAAH,MAiCAa,gBAPS,SAAAC,GACtB,MAAO,CACL4F,QAAS5F,EAAME,OAAO0F,QACtBC,UAAW7F,EAAME,OAAO2F,aAIY,CAAE1I,eAA3B4C,EA7BQ,SAAC,GAAyC,IAAvC5C,EAAsC,EAAtCA,YAAayI,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAE1CE,EAAc,IAAIC,KACtBD,EAAYE,QAAQF,EAAYG,UAAY,IAC5C,IAAIC,EAAaJ,EAAYK,cAAcC,UAAU,EAAG,IAClDC,GAAY,IAAIN,MAAOI,cAAcC,UAAU,EAAG,IAElDjJ,EAAG,kCAA8BR,EAA9B,6HAA+J0J,EAA/J,6BAA6LH,EAA7L,4BAMT,OAJA1F,qBAAU,WACRtD,EAAYC,KACX,CAACD,EAAaC,IAGf,kBAAC,GAAD,KACE,kBAAC,GAAD,+CACCwI,GAAW,kBAACE,GAAD,4CACXD,EAAY,kBAAC,GAAD,MAAa,kBAAC,GAAD,U,6XCrChC,IAAMU,GAAkBrH,UAAO2D,IAAV,MA4CN9C,gBAPS,SAAAC,GACtB,MAAO,CACL4F,QAAS5F,EAAME,OAAO0F,QACtBC,UAAW7F,EAAME,OAAO2F,aAIb9F,EAvBA,SAAC,GAA2B,EAAzB6F,QAA0B,IAAjBC,EAAgB,EAAhBA,UAKzB,OACE,oCACE,kBAACU,GAAD,KACE,kBAAC/D,EAAD,OAEDqD,EAAY,kBAAC,GAAD,MAAa,kBAAC,GAAD,U,y4BCjChC,IAAMJ,GAAUvG,UAAO2D,IAAV,MAQP6C,GAAWxG,UAAOyG,GAAV,MAMRa,GAAmBtH,UAAOO,OAAV,MA0BhBgH,GAAkBvH,UAAO2D,IAAV,MAwCN9C,gBANS,SAAAC,GACtB,MAAO,CACLnB,UAAWmB,EAAMnB,UAAUC,iBAIhBiB,EApCG,SAAC,GAAwB,IAAD,IAArBlB,iBAAqB,MAAT,GAAS,IACAuB,oBAAS,GADT,mBACjCsG,EADiC,KACnBC,EADmB,KAOxC,OACE,kBAAC,GAAD,KACGrI,QAAQI,IAAIG,EAAU+H,OAAQ,cAC9B/H,EAAU+H,OAAS,EAClB,oCACE,kBAAC,GAAD,gCACA,kBAACH,GAAD,KACE,kBAACD,GAAD,CAAkBnD,QAAS,kBAAMsD,GAAiBD,KAC/CA,EAAe,sBAAwB,uBAI5C,kBAAC,GAAD,OAGF,kBAAC,GAAD,8E,m4BCrER,IAAMG,GAAU3H,UAAO2D,IAAV,MAKPiE,GAAa5H,UAAO2D,IAAV,MAKVkE,GAAO7H,UAAO2D,IAAV,MAgBJmE,GAAQ9H,UAAO2D,IAAV,MAC0B,SAAAzD,GAAK,OAAIA,EAAM6H,cAM9CC,GAAmBhI,UAAO2D,IAAV,MAyBPsE,GAfI,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC9B,OACE,kBAACR,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,MACA,kBAACC,GAAD,CAEEC,WAAYI,KAGhB,kBAACH,GAAD,KAAmBE,K,69BCrDzB,IAAME,GAAWpI,UAAO2D,IAAV,MAKRiE,GAAa5H,UAAO2D,IAAV,MAOV0E,GAAMrI,UAAO2D,IAAV,MAqBH2E,GAAMtI,UAAO2D,IAAV,MACsB,SAAAzD,GAAK,OAAIA,EAAM6H,cAOxCQ,GAAoBvI,UAAO2D,IAAV,MAwBR6E,GAfM,SAAAtI,GACnB,OACE,kBAACkI,GAAD,KACE,kBAAC,GAAD,KACE,kBAACE,GAAD,CAEEP,WAAY7H,EAAMiI,gBAEpB,kBAACE,GAAD,OAEF,kBAACE,GAAD,KAAoBrI,EAAMgI,Y,ggCCzDhC,IAAM7F,GAAarC,kBAAOsC,IAAPtC,CAAH,MAoBVuC,GAAevC,UAAOwC,IAAV,MAkCZK,GAAc,CAClBC,UAAW,iBACX2F,MAAO,SA4CM5H,gBAPS,SAAAC,GACtB,MAAO,CACL4H,UAAW5H,EAAM9B,MAAM2J,OAAOD,UAC9BE,OAAQ9H,EAAM9B,MAAM4J,OAAO9J,WAIhB+B,EAzCA,SAAC,GAA2B,IAAzB6H,EAAwB,EAAxBA,UAAWE,EAAa,EAAbA,OAKrB1K,GAJW0E,wBAAc,CAC7BzE,MAAO,uBAGK6G,cAAR9G,KAEN,OACE,kBAAC,GAAD,KACGkB,QAAQI,IAAIoJ,EAAQ,UAErB,kBAAC,GAAD,CAAYxF,OAAK,EAACC,GAAE,UAAKnF,EAAL,YAAoB2E,YAAaA,IAArD,WAGA,kBAAC,GAAD,CAAYQ,GAAE,UAAKnF,EAAL,YAAoB2E,YAAaA,IAA/C,eAGC6F,EAAUhB,OAAS,GAClB,kBAAC,GAAD,CAAYrE,GAAE,UAAKnF,EAAL,WAAmB2E,YAAaA,IAA9C,UAID+F,EAAOlB,OAAS,GACf,kBAAC,GAAD,CAAYrE,GAAE,UAAKnF,EAAL,WAAmB2E,YAAaA,IAA9C,c,soBCnFR,IAAMgG,GAAY7I,UAAOO,OAAV,MAsBTuI,GAAW9I,kBAAO+I,KAAP/I,CAAH,MAmBCgJ,GAZW,SAAA9I,GACxB,OACE,oCACE,kBAAC2I,GAAD,CAAW1E,QAASjE,EAAMiE,SACxB,kBAAC2E,GAAD,MACC5I,EAAMS,KACNT,EAAMgF,S,2kBCjCIlF,UAAOO,OAAV,MAsBCP,kBAAOiJ,KAAPjJ,CAAH,M,qlBCxBd,IAAM6I,GAAY7I,UAAOO,OAAV,MAsBTuI,GAAW9I,kBAAO+I,KAAP/I,CAAH,MAkBCgJ,GAXW,SAAA9I,GACxB,OACE,oCACE,kBAAC,GAAD,CAAWiE,QAASjE,EAAMiE,SACxB,kBAAC,GAAD,MADF,iB,6iMCdkBnE,UAAO2D,IAAV,MAQa,SAAAzD,GAAK,OAAIA,EAAM6H,cARjD,IAkCMmB,GAAalJ,kBAAOmJ,IAAPnJ,CAAH,MA2BVuH,GAAkBvH,UAAO2D,IAAV,MA0CfyF,IAjCoBpJ,kBAAOkJ,GAAPlJ,CAAH,MAIDA,UAAO2D,IAAV,MAoBJ3D,UAAOsE,IAAV,MASYtE,UAAO2D,IAAV,OAyCf0F,GAAkBrJ,UAAO2D,IAAV,MAQf2F,GAAkBtJ,UAAO2D,IAAV,MAWf4F,GAASvJ,UAAO2D,IAAV,MA0BN6F,GAAaxJ,UAAOyG,GAAV,MASVgD,GAAczJ,kBAAOwJ,GAAPxJ,CAAH,MAMX0J,GAAO1J,UAAO2J,EAAV,MAKJC,GAAY5J,UAAO2D,IAAV,MAuBTa,GAAcxE,kBAAOS,KAAiBC,MAAM,CAAEC,KAAM8D,KAAtCzE,CAAH,MAWX2E,IAPW3E,kBAAO6J,KAAP7J,CAAH,MAOKA,kBAAOS,KAAiBC,MAAM,CAAEC,KAAMiE,KAAtC5E,CAAH,OAIV8J,GAAc9J,UAAO+J,GAAV,MAoJFlJ,gBARS,SAAAC,GACtB,MAAO,CACL9B,MAAO8B,EAAM9B,MAAMA,MACnB4J,OAAQ9H,EAAM9B,MAAM4J,OACpBjJ,UAAWmB,EAAMnB,UAAUC,iBAIS,CAAEoK,YlBhUf,SAAAhL,GAAK,OAAI,SAACZ,EAAUsB,GAAc,IACnDE,EAAkBF,IAAWC,UAA7BC,cAIR,GAHAR,QAAQI,IAAI,mBAAoBI,GAChCR,QAAQI,IAAIR,EAAO,kBAEU,IAAzBY,EAAc8H,OAAc,CAE9BtI,QAAQI,IAAI,qBACZ,IAAIyK,EAAW,GACXC,EAAYC,KAAKC,MAAMD,KAAKE,UAAUrL,IAG1C,OAFAiL,EAAQ,sBAAOA,GAAP,CAAiBC,IACzB9K,QAAQI,IAAIyK,EAAU,aACf7L,EAAS,CAAEE,KC/FQ,iBD+FcC,QAAS0L,IAC5C,GAAIrK,EAAc8H,OAAS,EAAG,CACnC,IAAIuC,EAAWrK,EAAc0K,QAE7B,GAAIL,EAAShH,MAAK,SAAAnD,GAAI,OAAIA,EAAKb,KAAOD,EAAMC,MAC1C,OAAOG,QAAQI,IAAI,wBAKrB,IAAI0K,EAAYC,KAAKC,MAAMD,KAAKE,UAAUrL,IAE1C,OAAOZ,EAAS,CAAEE,KC3GQ,iBD2GcC,QADxC0L,EAAQ,sBAAOA,GAAP,CAAiBC,SkByS0BzK,kBAAxCoB,EAlHC,SAAC,GAMV,IAAD,IALJ7B,aAKI,MALI,GAKJ,OAJJ4J,OAII,EAHJjJ,kBAGI,MAHQ,GAGR,EAFJqK,EAEI,EAFJA,YACAvK,EACI,EADJA,eAEI8K,EAAcvL,EAAQA,EAAMwL,OAAOzL,KAAI,SAAAe,GAAI,OAAIA,EAAKkC,QAAQ,KAU1DuD,EAAmBvG,EARF,SAAAwG,GACrB,IAAIC,EAAQD,EAAM,GACdE,EAASC,KAAKC,MAAMH,GACpBI,EAA6B,IAAlBJ,EAAQC,GAEvB,OAAOA,EAAS,KADDC,KAAKG,MAAMD,GACQ,IAGHE,CAAe/G,EAAM+F,SAAW,KAE3D0F,EAAuBzL,EACzB0L,KAAO1L,EAAM2L,aAAc,cAC3B,KAEAC,GAAgB,EAChBjL,EAAUsD,MAAK,SAAAnD,GAAI,OAAIA,EAAKb,KAAOD,EAAMC,QAC3C2L,GAAgB,GAMlB,OACE,oCACGxL,QAAQI,IAAIG,EAAW,UACvBX,EACC,kBAACoK,GAAD,KACE,kBAACG,GAAD,KACE,4BAAKvK,EAAMkG,OACX,kBAAC4E,GAAD,KAAc9K,EAAM6L,SACpB,4BAAKN,EAAYO,KAAK,OACtB,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,UAAW,UACrB,IAAlBjM,EAAM+F,SACL,oCACE,4BACE,kBAAC,GAAD,MACCQ,IAIiB,IAAvBvG,EAAMmG,cACL,oCACE,wBAAI4F,MAAO,CAAEtC,MAAO,OAAQyC,WAAY,SACtC,kBAAC,GAAD,MACClM,EAAMmG,iBAMjB,kBAACyE,GAAD,KACE,wCACA,2BAAI5K,EAAMmM,WAGZ,kBAAC9B,GAAD,KACE,kBAACC,GAAD,KACE,kBAACG,GAAD,iBACmB,IAAlBzK,EAAMoM,QACL,kBAAC1B,GAAD,sBAEA,kBAACA,GAAD,SAAQ,KAAO1K,EAAMoM,QAAQC,mBAGjC,kBAAC/B,GAAD,KACE,kBAACG,GAAD,gBACkB,IAAjBzK,EAAMsM,OACL,kBAAC5B,GAAD,sBAEA,kBAACA,GAAD,SAAQ,KAAO1K,EAAMsM,OAAOD,mBAGhC,kBAAC/B,GAAD,KACE,kBAACG,GAAD,sBACA,kBAACC,GAAD,KAAOe,EAAqBc,OAAO,SAIvC,kBAAC,GAAD,KAIGX,EACC,kBAACY,GAAD,CACEtG,MAAO,mBACPf,QAAS,kBAAM1E,EAAeT,MAGhC,kBAAC,GAAD,CAAmBmF,QAAS,kBAAM6F,EAAYhL,QAIlD,S,s4CCtXV,IAAMyM,GAAiBzL,UAAO2D,IAAV,MAcd+H,GAAU1L,UAAOyG,GAAV,MAIPkB,GAAU3H,UAAO2D,IAAV,MAKPgI,GAAa3L,UAAOsE,IAAV,MAYVsH,GAAe5L,UAAOO,OAAV,MAgBZsL,GAAc7L,kBAAO4L,GAAP5L,CAAH,MAMX8L,GAAW9L,UAAO2D,IAAV,MAIRoI,GAAe/L,kBAAO0L,GAAP1L,CAAH,MA4FHgM,GArFI,SAAC,GAOb,IANLrD,EAMI,EANJA,OACAsD,EAKI,EALJA,aACAC,EAII,EAJJA,aACAhH,EAGI,EAHJA,MACAiH,EAEI,EAFJA,UAEI,IADJC,YACI,MADG,SACH,IAG4ClL,mBAAS+K,GAHrD,mBAGGI,EAHH,KAGqBC,EAHrB,OAI4BpL,mBAAS,CAAEqL,MAAM,EAAMC,OAAO,IAJ1D,mBAIGC,EAJH,KAIaC,EAJb,KAMAC,EAAehE,EAAOiE,WACxB,SAAA9M,GAAI,OAAIA,EAAK+M,YAAcR,KAkBvBS,EAAYC,iBAAO,MAWzB,OATAxL,qBAAU,WAhBRmL,EAAY,CACVH,KAAMI,EAAe,GAAK,EAC1BH,MAAOG,EAAe,EAAIhE,EAAOjB,SAkB/BoF,GACFA,EAAUE,QAAQC,UAEnB,CAACZ,EAAkBM,EAAcG,IAE7BI,IAASC,aACd,kBAAC1B,GAAD,CACEtH,QAAS+H,EACTkB,aAAW,OACXC,SAAS,KACTjB,KAAMA,EACNkB,aAAYnB,EACZoB,UApBc,SAAC,GAAD,OAA6B,KAA7B,EAAGC,SAAgCtB,MAsBjD,kBAAC,GAAD,CAAS/H,QAAS,SAAAzC,GAAC,OAAIA,EAAE+L,oBACvB,kBAAC/B,GAAD,KAAUxG,GACV,kBAACyG,GAAD,CAAY3F,IAAG,UA9CF,uCA8CE,OAAkBqG,KACjC,kBAACR,GAAD,CACE6B,GAAG,SACHvJ,QAAS+H,EACToB,aAAW,cACXK,IAAK,SAAAC,GAAI,OAAKd,EAAUE,QAAUY,IAElC,kBAAC,KAAD,OAEF,kBAAC9B,GAAD,KACGW,EAASF,MACR,kBAACX,GAAD,CAAczH,QAAS,kBAzCf,SAAAwE,GAAM,OACtB2D,EAAoB3D,EAAOgE,EAAe,GAAGE,WAwCRgB,CAAUlF,KACrC,kBAAC,KAAD,OAGH8D,EAASD,OACR,kBAACZ,GAAD,CAAczH,QAAS,kBA3Cf,SAAAwE,GAAM,OACtB2D,EAAoB3D,EAAOgE,EAAe,GAAGE,WA0CRiB,CAAUnF,KACrC,kBAAC,KAAD,OAGJ,kBAACoD,GAAD,KACGY,EAAe,EADlB,MACwBhE,EAAOjB,WAMrCqG,SAASC,O,y1CC3Kb,IAAMzH,GAAUvG,UAAO2D,IAAV,MAIPsK,GAAsBjO,UAAO2D,IAAV,MAgBL,SAAAzD,GAAK,OAAKA,EAAMgO,YAAc,MAAQ,MAGpDC,GAAkBnO,UAAOO,OAAV,MAoBf6N,GAAWpO,kBAAOqO,KAAPrO,CAAH,MASRsO,GAAWtO,kBAAOoO,GAAPpO,CAAH,MAIRuO,GAAavO,kBAAOmO,GAAPnO,CAAH,KAGJoO,IAKNI,GAAcxO,kBAAOmO,GAAPnO,CAAH,KAGLsO,IAyFGG,GApFiB,SAAC,GAAwC,IAAtCvG,EAAqC,EAArCA,SAAqC,IAA3BwG,sBAA2B,MAAV,IAAU,EAChEC,EAAe5B,iBAAO,MAD0C,EAGxB7L,oBAAS,GAHe,mBAG9C0N,GAH8C,aAI1B1N,oBAAS,GAJiB,mBAI/D2N,EAJ+D,KAI/CC,EAJ+C,OAK5B5N,oBAAS,GALmB,mBAK/D6N,EAL+D,KAKhDC,EALgD,KAOhEC,EAAmB,WAAO,IAAD,EACQN,EAAa3B,QAC5CkC,EAFuB,EACrBC,YADqB,EACRC,YAGrBR,EAAmBM,GACnB9P,QAAQI,IAAI,mBAAoB0P,IAG5BG,EAAyB,WAAO,IAAD,EACcV,EAAa3B,QAAtDsC,EAD2B,EAC3BA,WAAYH,EADe,EACfA,YAAaC,EADE,EACFA,YAEjCJ,EAAiBM,EAAa,GAC9BR,EAAkBQ,IAAeH,EAAcC,IAI3CG,GAD2BC,KAASP,EAAkB,KACrBO,KAASH,EAAwB,MAElEI,EAAoB,SAAAC,GACxBf,EAAa3B,QAAQ2C,SAAS,CAAEpD,KAAMmD,EAAUE,SAAU,YA1BU,EA6BjDC,cAAU,iBAAO,CACpCC,UAAW,uCA9ByD,mBA6BxDC,GA7BwD,WAiChEC,EAAQ,SAAC9N,GAAmC,IAAvB+N,EAAsB,uDAAP,GACxC,OAAI/N,EAAQ,EACHA,EAAQ+N,EAAUA,EAAU/N,EAE5BA,GAAS+N,GAAWA,EAAU/N,GAInCgO,EAAOC,cAAU,SAAAxO,GACrBoO,EAAI,CACFD,UAAU,8BAAD,OACPnO,EAAMyO,UAAYJ,EAAMrO,EAAM0O,MAAM,IAAM,EADnC,aAeb,OATA9O,qBAAU,WACR0N,IACAI,IACAV,EAAa3B,QAAQsD,iBACnB,SACAf,KAED,CAACR,EAAeF,IAGjB,kBAAC,GAAD,KACGE,GACC,kBAACR,GAAD,CAAYpK,QAAS,kBAAMsL,GAAmBf,KAC5C,kBAACN,GAAD,OAIHS,GACC,kBAACL,GAAD,CAAarK,QAAS,kBAAMsL,EAAkBf,KAC5C,kBAACJ,GAAD,OAIJ,kBAACL,GAAD,eACEN,IAAK,SAAAC,GACHe,EAAa3B,QAAUY,IAErBsC,KAEHhI,K,28CCvJT,IAAM3B,GAAUvG,UAAO2D,IAAV,MAOP4M,GAAkBvQ,kBAAOwQ,KAAS7M,IAAhB3D,CAAH,MAoBfqJ,GAAkBrJ,UAAO2D,IAAV,MAQf8M,GAAazQ,UAAOsE,IAAV,MA4HDzD,gBARS,SAAAC,GACtB,MAAO,CACL4H,UAAW5H,EAAM9B,MAAM2J,OAAOD,UAC9BgI,QAAS5P,EAAM9B,MAAM2J,OAAO+H,QAC5BxL,MAAOpE,EAAM9B,MAAMA,MAAMkG,SAIdrE,EAzEA,SAAC,GAAoC,IAAD,IAAjC6H,iBAAiC,MAArB,GAAqB,MAAjBxD,aAAiB,MAAT,GAAS,IACXhE,oBAAS,GADE,mBAC1CyP,EAD0C,KAC7BC,EAD6B,OAG5Bf,cAAU,iBAAO,CACpCC,UAAW,uCAJoC,mBAG1C/E,EAH0C,aASb7J,mBAAS,KATI,mBAS1C2P,EAT0C,KAS9BC,EAT8B,KAa3CC,EAAmB,SAAAC,GACvB,OAA0BA,GAoB5B,OACE,kBAAC,GAAD,KACGL,GACC,kBAAC,GAAD,CACEM,YArBY,SAAAtD,GAClBA,EAAIV,SAqBEtE,OAAQD,EACRuD,aAAc4E,EACd3E,aAba,WACnB0E,GAAe,GAEfG,GAAiB,IAWX7L,MAAOA,EACPiH,UAAU,gDAGd,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAyBuC,eAAe,QACrChG,EAAU4B,MAAM,EAAG,IAAIvL,KAAI,SAAAmS,GAC1B,OACE,kBAACX,GAAD,CAAiBjK,IAAK4K,EAAMrE,UAAW9B,MAAK,MAAOA,IACjD,kBAAC0F,GAAD,CACEzK,IAAG,UA7CF,mCA6CE,OAAgBkL,EAAMrE,WACzB1I,QAAS,kBAhCLgN,EAgCuBD,EAAMrE,UA/B/CiE,EAAcK,GACdP,GAAe,QAEfG,GAAiB,GAJC,IAAAI,GAiCJjL,IAAI,2B,osBChJtB,IAAMkL,GAAgBpR,UAAO2D,IAAV,MAYb0N,GAAgBrR,UAAO2D,IAAV,MAgBb2N,GAActR,UAAOuR,OAAV,MA+BF1Q,gBANS,SAAAC,GACtB,MAAO,CACLvB,MAAOuB,EAAM0Q,SAASC,gBAIX5Q,EAvBK,SAAC,GAAe,IAAbtB,EAAY,EAAZA,MACfmS,EAAQ,wCAAoCnS,EAAMN,IAExD,OACE,kBAACmS,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,CACEpM,MAAM,eACNc,IAAK0L,EACLC,iBAAe,EACfC,YAAY,W,8tECtCN5R,UAAO2D,IAAV,MAMM3D,kBAAO6R,KAAP7R,CAAH,MAaYA,UAAO2D,IAAV,MAKL,SAAAzD,GAAK,OAAKA,EAAMgO,YAAc,MAAQ,MAKrClO,UAAOO,OAAV,MAeMP,UAAOO,OAAV,MAIjB,SAAAL,GAAK,MAAwB,SAApBA,EAAM4R,WAAwB,aAEvC,SAAA5R,GAAK,MAAwB,UAApBA,EAAM4R,WAAyB,cAlD5C,IAyFM1D,GAAWpO,kBAAOqO,KAAPrO,CAAH,M,IAQGA,kBAAOoO,GAAPpO,CAAH,MAKWA,kBAAOwQ,KAAS7M,IAAhB3D,CAAH,MAYNA,UAAOsE,IAAV,MAUAtE,UAAO2J,EAAV,M,y5BChIV,IAAMoI,GAAe/R,UAAO2D,IAAV,MAYZqO,GAAiBhS,UAAOsE,IAAV,MAqDLzD,IAxCIb,UAAOO,OAAV,MAoBCP,kBAAOiS,KAAPjS,CAAH,MAoBCa,YAAQ,KAAM,CAAEvB,iBAAhBuB,EAlBG,SAAC,GAA8B,IAA5BtB,EAA2B,EAA3BA,MAAOD,EAAoB,EAApBA,cAC1B,OACE,kBAACyS,GAAD,CAAc5N,QAAS,kBAAM7E,EAAcC,KACzC,kBAACyS,GAAD,CACE9L,IAAK3G,EAAM2S,QAAQhN,MACnBc,IAAKzG,EAAM2S,QAAQC,WAAWC,OAAOlU,WCxC9B2C,gBANS,SAAAC,GACtB,MAAO,CACL8H,OAAQ9H,EAAM0Q,SAASA,YAIZ3Q,EAhBG,SAAC,GAAqB,IAAD,IAAlB+H,cAAkB,MAAT,GAAS,EACrC,OACE,oCACGA,EAAO7J,KAAI,SAAAQ,GACV,OAAO,kBAAC,GAAD,CAAW+G,IAAK/G,EAAMN,GAAIM,MAAOA,W,omBCQhD,IAAM8S,GAAiBrS,UAAO2D,IAAV,MAOd2O,GAAkBtS,UAAOO,OAAV,MAiBfgS,GAAgBvS,UAAO2D,IAAV,MAmFJ9C,gBAVS,SAAAC,GACtB,MAAO,CACL8H,OAAQ9H,EAAM9B,MAAM4J,OAAO9J,QAC3B0S,SAAU1Q,EAAM0Q,SAASA,SACzBC,aAAc3Q,EAAM0Q,SAASC,aAC7B/K,QAAS5F,EAAM0Q,SAAS9K,QACxBC,UAAW7F,EAAM0Q,SAAS7K,aAIU,CAAE6L,c1BjDb,SAAAC,GAAU,8CAAI,WAAMrU,GAAN,eAAAC,EAAA,6DACzCD,EAAS,CAAEE,KCnE2B,6BDkEG,kBAIhBoU,EAAQjU,IAAI,UAAW,CAC5CV,OAAQ,CACNkB,GAAIwT,EACJE,KAAM,oCACNrM,I2BlFuB3I,6C3B0EY,OAIjCe,EAJiC,OAYvCN,EAAS,CAAEE,KC5EyB,2BD4EOC,QAASG,EAASG,KAAK+T,QAZ3B,gDAcvCxU,EAAS,CAAEE,KC/EsB,0BDgFjCc,QAAQC,MAAM,yBAA0B,kBAAxC,MAfuC,yDAAJ,uD0BiDkBC,iBAA1CuB,EA3EA,SAAC,GAQT,IAPL+H,EAOI,EAPJA,OACA4I,EAMI,EANJA,SACAgB,EAKI,EALJA,cACAlT,EAII,EAJJA,cACAmS,EAGI,EAHJA,aACA9K,EAEI,EAFJA,UAGMkM,GADF,EADJnM,QAEoBkC,EAAO7J,KAAI,SAAAQ,GAAK,OAAIA,EAAM+G,OAAKwE,KAAK,MAGxDvJ,qBAAU,WAIR,OAHAiR,EAAcK,GAGP,WACLvT,EAAc,SAEf,CAACkT,EAAeK,EAAavT,IAmBhC,OACE,oCACIqH,EAiBA,oCACE,kBAAC,GAAD,OAjBF,oCACE,kBAAC0L,GAAD,KACGZ,GAAgB,kBAAC,GAAD,MAChBA,GACC,kBAACa,GAAD,CAAiBnO,QAAS,kBAAM7E,EAAc,QAC5C,kBAAC,KAAD,OAGJ,kBAACiT,GAAD,KACE,kBAAC,GAAD,KACGf,GAAY,kBAAC,GAAD,c,8sEExFbxR,UAAOyG,GAAV,MAAb,IAUMF,GAAUvG,UAAO2D,IAAV,MAYPmP,IAFc9S,UAAO2D,IAAV,MAEQ3D,kBAAOwQ,KAAS7M,IAAhB3D,CAAH,OAuBhB+S,GAAgB/S,UAAO2D,IAAV,MAIbqP,GAAUhT,UAAOsE,IAAV,MAYPoF,GAAO1J,UAAO2J,EAAV,MAIJsJ,GAAWjT,kBAAO0J,GAAP1J,CAAH,MAKRkT,GAAYlT,kBAAOiT,GAAPjT,CAAH,MA8DAa,gBANU,SAAAC,GACvB,MAAO,CACLqS,KAAMrS,EAAM9B,MAAMoU,QAAQD,QAIftS,EAzDF,SAAC,GAAmB,IAAD,IAAhBsS,YAAgB,MAAT,GAAS,IAGTtD,cAAU,iBAAO,CACpCC,UAAW,uCAJiB,mBAGvB/E,EAHuB,KAGhBgF,EAHgB,KAOxBC,EAAQ,SAAC9N,GAAmC,IAAvB+N,EAAsB,uDAAP,GACxC,OAAI/N,EAAQ,EACHA,EAAQ+N,EAAUA,EAAU/N,EAE5BA,GAAS+N,GAAWA,EAAU/N,GAI5BiO,cAAU,SAAAxO,GACrBoO,EAAI,CACFD,UAAU,8BAAD,OACPnO,EAAMyO,UAAYJ,EAAMrO,EAAM0O,MAAM,IAAM,EADnC,aAMb,OACE,kBAAC,GAAD,KAGE,kBAAC,GAAD,KACG8C,EAAK7I,MAAM,EAAG,IAAIvL,KAAI,SAAAsU,GACrB,OACE,kBAAC,GAAD,CAAkB/M,IAAK+M,EAAOpU,GAAI8L,MAAK,MAAOA,IAC5C,kBAAC,GAAD,CACE/E,IACEqN,EAAOC,aAAP,UAhCM,mCAgCN,OACuBD,EAAOC,cAC1BrN,KAENC,IAAG,uBAAkBmN,EAAOrR,QAE9B,kBAAC+Q,GAAD,KACE,kBAACE,GAAD,KAAWI,EAAOE,WAClB,kBAACL,GAAD,KAAYG,EAAOrR,gB,0tCC1HnC,IAAMwR,GAAgBxT,UAAO2D,IAAV,MAoBb8P,GAAazT,kBAAOwT,GAAPxT,CAAH,MASV0T,GAAc1T,UAAOyG,GAAV,MAUXkN,GAAW3T,UAAO2J,EAAV,MAMRiK,GAAY5T,UAAOyG,GAAV,MA0FA5F,gBANS,SAAAC,GACtB,MAAO,CACL+S,KAAM/S,EAAM9B,MAAMoU,QAAQS,QAIfhT,EAhFF,SAAC,GAAmB,IAAD,IAAhBgT,YAAgB,MAAT,GAAS,EAwBxBC,EAAoB,WAA8B,IAA7BD,EAA4B,uDAArB,GAAIE,EAAiB,uDAAP,GAC1CC,EAAiBH,EAAK5Q,MAAK,SAAAoQ,GAAM,OAAIA,EAAOY,MAAQF,KAExD,OAAIC,EACKA,EAAehS,KAEf,iBAILkS,EAAWJ,EAAkBD,EAAM,YAEnCM,EAAWL,EAAkBD,EAAM,2BAEnCO,EAAUP,EACbhU,QAAO,SAAAwT,GAAM,MAAmB,eAAfA,EAAOY,KAAuC,WAAfZ,EAAOY,OACvDlV,KAAI,SAAAsU,GAAM,OAAIA,EAAOrR,QACrB8I,KAAK,MAER,OACE,kBAAC0I,GAAD,KACE,kBAACI,GAAD,oBACA,kBAACH,GAAD,KACE,kBAACC,GAAD,mBACA,kBAACC,GAAD,KAAWO,EAAX,MAGF,kBAACT,GAAD,KACE,kBAACC,GAAD,sBACA,kBAACC,GAAD,SAAYS,EAAZ,MAGF,kBAACX,GAAD,KACE,kBAACC,GAAD,eACA,kBAACC,GAAD,KAAWQ,Q,4TChHnB,IAAM5N,GAAUvG,UAAO2D,IAAV,MA0BE0Q,GATC,WACd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,q6DCyBUrU,UAAO2D,IAAV,MAKM3D,UAAO2D,IAAV,MAKH3D,UAAO2D,IAAV,MAgBI3D,UAAO2D,IAAV,MAC0B,SAAAzD,GAAK,OAAIA,EAAM6H,cAM3B/H,UAAO2D,IAAV,MAYL3D,UAAO2D,IAAV,MAKM3D,UAAO2D,IAAV,MAML3D,UAAO2D,IAAV,MAiBG3D,UAAO2D,IAAV,MAC4B,SAAAzD,GAAK,OAAIA,EAAM6H,cAO1B/H,UAAO2D,IAAV,MAjFvB,IA2FM2Q,GAAatU,UAAO2D,IAAV,MAmLD4Q,eACb1T,aAXsB,SAAAC,GACtB,MAAO,CACL9B,MAAO8B,EAAM9B,MAAMA,MACnB2J,OAAQ7H,EAAM9B,MAAM2J,OACpB6L,eAAgB1T,EAAM9B,MAAMwV,eAC5B7N,UAAW7F,EAAM9B,MAAM2H,UACvBD,QAAS5F,EAAM9B,MAAM0H,WAKE,CAAE+N,W/BjSH,SAAAvW,GAAG,8CAAI,WAAME,GAAN,eAAAC,EAAA,6DAC/BD,EAAS,CAAEE,KCnCwB,0BDkCJ,kBAINE,EAAKC,IAAIP,GAJH,OAIvBQ,EAJuB,OAM7BN,EAAS,CAAEE,KCtCsB,wBDsCOC,QAASG,EAASG,OAN7B,gDAQ7BT,EAAS,CAAEE,KCzCmB,uBD0C9Bc,QAAQC,MAAM,yBAA0B,kBAAxC,MAT6B,yDAAJ,wD+BiS3BwB,EA/KmB,SAAAX,GAAU,IAAD,EAUxBA,EARFlB,aAF0B,MAElB,GAFkB,EAI1B2J,GAMEzI,EAPF0I,OAOE1I,EANFyI,QAEA6L,GAIEtU,EALFkT,QAKElT,EAJFsU,gBACAC,EAGEvU,EAHFuU,WACA9N,EAEEzG,EAFFyG,UAII+N,GAFFxU,EADFwG,QAGuB9D,wBAAc,CAAEzE,MAAO,yBAI5CwW,EAAaH,GAAkCtU,EAAM0U,MAAM7W,OAAOkB,GAEhE4V,EAAQ,6CAAyCF,EAAzC,oBAA+DjX,EAA/D,4FAEd6D,qBAAU,WACRkT,EAAWI,KACV,CAACJ,EAAYI,IAtBY,IAiCxB1M,EAjCwB,EAwBRnD,cAAd9B,EAxBsB,EAwBtBA,KAAMhF,EAxBgB,EAwBhBA,IAEN4W,EAAY,sCAEZC,EAAS,UAAM7W,EAAN,YACT8W,EAAY,UAAM9W,EAAN,YACZ+W,EAAW,UAAM/W,EAAN,WACXgX,EAAW,UAAMhX,EAAN,WAIjB,GAAIyK,GAAUA,EAAOD,UAAUhB,QAAU,EACvC,OAAQxH,EAAMkB,SAASI,UACrB,KAAKuT,EACH5M,EAAa,UAAM2M,GAAN,OAAkBnM,EAAOD,UAAU,GAAGmE,WACnD,MAEF,KAAKmI,EACH7M,EAAa,UAAM2M,GAAN,OAAkBnM,EAAOD,UAAU,GAAGmE,WACnD,MAEF,KAAKoI,EACH9M,EAAa,UAAM2M,GAAN,OAAkBnM,EAAOD,UAAU,GAAGmE,WACnD,MAEF,KAAKqI,EACH/M,EAAa,UAAM2M,GAAN,OAAkBnM,EAAOD,UAAU,GAAGmE,WACnD,MAEF,QACE1E,EAAa,UAAM2M,GAAN,OAAkBnM,EAAOD,UAAU,GAAGmE,gBAIvD1E,EADSQ,GAAUA,EAAOD,UAAUhB,OAAS,EAChC,UAAMoN,GAAN,OAAkBnM,EAAOD,UAAU,GAAGmE,WAC1ClE,GAAUA,EAAO+H,QAAQhJ,OAAS,EAC9B,UAAMoN,GAAN,OAAkBnM,EAAO+H,QAAQ,GAAG7D,WAEjC5G,KAmClB,OACE,qCACIU,GAAa3H,EACb,kBAACsV,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOpR,KAAI,UAAKA,EAAL,aACRwR,EACC,kBAAC,GAAD,CAAcvM,cAAeA,GAC3B,kBAAC,GAAD,OAGF,kBAAC,GAAD,CAAYA,cAAeA,GACzB,kBAAC,GAAD,QAIN,kBAAC,GAAD,CAAcA,cAAeA,GAC3B,kBAAC,IAAD,CAAOjF,KAAI,UAAKA,EAAL,aACT,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,YACT,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,YACT,kBAAC,GAAD,UAMR,oCACE,kBAAC,GAAD,Y,sdCtQH,IAAMiS,GAAcC,4BAAH,KACpBC,aAkDW1X,GAjCH,WACV,OACE,oCACE,kBAACwX,GAAD,MACA,kBAAC,IAAD,CAAQ5X,QAASA,GACf,kBAAC,EAAD,MAMA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU6F,OAAK,EAACkS,KAAK,IAAIjS,GAAG,aAC5B,kBAAC,IAAD,CAAOD,OAAK,EAACF,KAAK,WAAWqS,UAAWC,KACxC,kBAAC,IAAD,CAAOpS,OAAK,EAACF,KAAK,YAAYqS,UAAWE,KACzC,kBAAC,IAAD,CAAOrS,OAAK,EAACF,KAAK,UAAUqS,UAAWG,KACvC,kBAAC,IAAD,CAAOtS,OAAK,EAACF,KAAK,aAAaqS,UAAWI,KAC1C,kBAAC,IAAD,CACEzS,KAAM,CACJ,eACA,gBACA,cACA,kBAEFqS,UAAWK,S,8jBCpDvB,IAAMC,GAAgB,CACpBjW,cAAe,I,8jBCCjB,IAAMiW,GAAgB,CACpB7W,MAAO,KACPoU,QAAS,KACTxK,OAAQ,KACRD,OAAQ,KACR6L,eAAgB,GAChB9N,SAAS,EACTC,WAAW,G,8jBCPb,IAAMkP,GAAgB,CACpB7U,OAAQ,GACRD,eAAgB,GAChB2F,SAAS,EACTC,WAAW,G,8jBCJb,IAAMkP,GAAgB,CACpBrE,SAAU,KACVC,aAAc,KACd/K,SAAS,EACTC,WAAW,GCLEmP,eAAgB,CAC7BnW,UJEa,WAAoC,IAAnCmB,EAAkC,uDAA1B+U,GAAeE,EAAW,uCAChD,OAAQA,EAAOzX,MACb,IhCI0B,iBgCD1B,IhCE4B,mBgCD1B,OAAO,MACFwC,EADL,CAEElB,cAAemW,EAAOxX,UAE1B,QACE,OAAOuC,IIZX9B,MHSa,WAAoC,IAAnC8B,EAAkC,uDAA1B+U,GAAeE,EAAW,uCAChD,OAAQA,EAAOzX,MACb,IjCnBiC,wBiCoB/B,OAAO,MACFwC,EADL,CAEE4F,SAAS,EACTC,WAAW,IAGf,IjCzB8B,qBiC0B5B,OAAO,MACF7F,EADL,CAEE4F,SAAS,EACTC,WAAW,IAGf,IjC/BiC,wBiCgC/B,OAAO,MACF7F,EADL,CAEE9B,MAAO+W,EAAOxX,QACd6U,QAAQ,MAAM2C,EAAOxX,QAAQ6U,SAC7BxK,OAAO,MAAMmN,EAAOxX,QAAQqK,QAC5BD,OAAO,MAAMoN,EAAOxX,QAAQoK,QAC5BjC,SAAS,EACTC,WAAW,IAGf,IjCzByB,gBiC0BvB,OAAO,MACF7F,EADL,CAEE0T,eAAgBuB,EAAOxX,UAG3B,QACE,OAAOuC,IG1CXE,OFKa,WAAoC,IAAnCF,EAAkC,uDAA1B+U,GAAeE,EAAW,uCAChD,OAAQA,EAAOzX,MACb,IlCZkC,yBkCahC,OAAO,MACFwC,EADL,CAEE4F,SAAS,EACTC,WAAW,IAGf,IlClB+B,sBkCmB7B,OAAO,MACF7F,EADL,CAEE4F,SAAS,EACTC,WAAW,IAGf,IlCxBkC,yBkCyBhC,OAAO,MACF7F,EADL,CAEEE,OAAQ+U,EAAOxX,QACfmI,SAAS,EACTC,WAAW,IAGf,IlC3BkC,yBkC4BhC,OAAO,MACF7F,EADL,CAEEC,eAAgBgV,EAAOxX,UAG3B,QACE,OAAOuC,IEnCX0Q,SDIa,WAAoC,IAAnC1Q,EAAkC,uDAA1B+U,GAAeE,EAAW,uCAChD,OAAQA,EAAOzX,MACb,InCRoC,2BmCSlC,OAAO,MACFwC,EADL,CAEE4F,SAAS,EACTC,WAAW,IAGf,InCdiC,wBmCe/B,OAAO,MACF7F,EADL,CAEE4F,SAAS,EACTC,WAAW,IAGf,InCpBoC,2BmCqBlC,OAAO,MACF7F,EADL,CAEE0Q,SAAUuE,EAAOxX,QACjBmI,SAAS,EACTC,WAAW,IAGf,InCpByB,gBmCqBvB,OAAO,MACF7F,EADL,CAEE2Q,aAAcsE,EAAOxX,UAGzB,QACE,OAAOuC,MEnCPkV,IADmBC,OAAOC,sCAAwCC,IAC1DC,YAAYC,GAAUC,YAAgBC,OAEpDrJ,IAASsJ,OACP,kBAAC,IAAD,CAAUR,MAAOA,IACf,kBAAC,GAAD,OAEFjI,SAAS0I,cAAc,Y","file":"static/js/main.e1a50612.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/posterplaceholder.5eb0b883.jpg\";","import { createBrowserHistory } from \"history\";\r\n\r\n// deployment\r\nconst history = createBrowserHistory({ basename: \"/MovieCards\" });\r\n\r\n// dev\r\n// const history = createBrowserHistory();\r\n\r\nexport default history;\r\n","export const TMDB_API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n","import axios from \"axios\";\r\n\r\nimport { TMDB_API_KEY } from \"./key\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n  params: {\r\n    api_key: `${TMDB_API_KEY}`\r\n  }\r\n});\r\n","import axios from \"axios\";\r\n\r\nimport { YOUTUBE_API_KEY } from \"./key\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3\"\r\n});\r\n","import {\r\n  FETCH_MOVIE_INITIATED,\r\n  FETCH_MOVIE_FAILED,\r\n  FETCH_MOVIE_SUCCEEDED,\r\n  FETCH_MOVIES_INITIATED,\r\n  FETCH_MOVIES_FAILED,\r\n  FETCH_MOVIES_SUCCEEDED,\r\n  FETCH_TRAILERS_INITIATED,\r\n  FETCH_TRAILERS_FAILED,\r\n  FETCH_TRAILERS_SUCCEEDED,\r\n  SEARCH_QUERY_SUBMITTED,\r\n  ADDED_FAVORITE,\r\n  REMOVED_FAVORITE,\r\n  VIDEO_CLICKED,\r\n  MOVIE_CLICKED\r\n} from \"./types\";\r\n\r\nimport { TMDB_API_KEY } from \"../apis/tmdb/key\";\r\nimport { YOUTUBE_API_KEY } from \"../apis/youtube/key\";\r\n\r\nimport tmdb from \"../apis/tmdb/tmdb\";\r\nimport youtube from \"../apis/youtube/youtube\";\r\n\r\nimport history from \"../components/history\";\r\n\r\nexport const handleMovieClick = (id, path) => async dispatch => {\r\n  dispatch({ type: MOVIE_CLICKED, payload: id });\r\n\r\n  let navigationPath = `${path}/${id}/details`;\r\n\r\n  history.push(navigationPath);\r\n};\r\n\r\n//! Make One fetchMovie function with optional args or handling for multiple requests...\r\nexport const fetchMovie = url => async dispatch => {\r\n  dispatch({ type: FETCH_MOVIE_INITIATED });\r\n\r\n  try {\r\n    const response = await tmdb.get(url);\r\n\r\n    dispatch({ type: FETCH_MOVIE_SUCCEEDED, payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_MOVIE_FAILED });\r\n    console.error(\"%cData Fetching Error:\", \"font-size: 18px\", error);\r\n  }\r\n};\r\n\r\nexport const fetchMovies = (url, query = \"\") => async dispatch => {\r\n  if (query) {\r\n    dispatch({ type: SEARCH_QUERY_SUBMITTED, payload: query });\r\n  }\r\n\r\n  dispatch({ type: FETCH_MOVIES_INITIATED });\r\n\r\n  try {\r\n    const response = await tmdb.get(url);\r\n\r\n    await Promise.all(\r\n      response.data.results.map(async movie => {\r\n        const responseDetails = await tmdb.get(\r\n          `https://api.themoviedb.org/3/movie/${movie.id}?api_key=${TMDB_API_KEY}&&language=en-US`\r\n        );\r\n\r\n        movie.details = responseDetails.data;\r\n      })\r\n    );\r\n\r\n    dispatch({ type: FETCH_MOVIES_SUCCEEDED, payload: response.data.results });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_MOVIES_FAILED });\r\n    console.error(\"%cData Fetching Error:\", \"font-size: 18px\", error);\r\n  }\r\n};\r\n\r\nexport const fetchTrailers = trailerIds => async dispatch => {\r\n  dispatch({ type: FETCH_TRAILERS_INITIATED });\r\n\r\n  try {\r\n    const response = await youtube.get(\"/videos\", {\r\n      params: {\r\n        id: trailerIds,\r\n        part: \"snippet,contentDetails,statistics\",\r\n        key: YOUTUBE_API_KEY\r\n      }\r\n    });\r\n\r\n    dispatch({ type: FETCH_TRAILERS_SUCCEEDED, payload: response.data.items });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_TRAILERS_FAILED });\r\n    console.error(\"%cData Fetching Error:\", \"font-size: 18px\", error);\r\n  }\r\n};\r\n\r\nexport const onVideoSelect = video => {\r\n  console.log(\"vid triggered...\");\r\n  return { type: VIDEO_CLICKED, payload: video };\r\n};\r\n\r\nexport const addFavorite = movie => (dispatch, getState) => {\r\n  const { favoritesList } = getState().favorites;\r\n  console.log(\"add fav trigged.\", favoritesList);\r\n  console.log(movie, \"addedfav movie\");\r\n\r\n  if (favoritesList.length === 0) {\r\n    // If no favorites exist, clone the movie and copy into newArray.\r\n    console.log(\"length is zero...\");\r\n    let newArray = [];\r\n    let deepClone = JSON.parse(JSON.stringify(movie));\r\n    newArray = [...newArray, deepClone];\r\n    console.log(newArray, \"added fav\");\r\n    return dispatch({ type: ADDED_FAVORITE, payload: newArray });\r\n  } else if (favoritesList.length > 0) {\r\n    let newArray = favoritesList.slice();\r\n\r\n    if (newArray.find(item => item.id === movie.id)) {\r\n      return console.log(\"match found via find\");\r\n    }\r\n\r\n    // If no duplicates exist, add to favorites list.\r\n\r\n    let deepClone = JSON.parse(JSON.stringify(movie));\r\n    newArray = [...newArray, deepClone];\r\n    return dispatch({ type: ADDED_FAVORITE, payload: newArray });\r\n  }\r\n};\r\n\r\nexport const removeFavorite = movie => (dispatch, getState) => {\r\n  const { favoritesList } = getState().favorites;\r\n\r\n  const newFavorites = favoritesList.filter(item => item.id !== movie.id);\r\n\r\n  dispatch({ type: REMOVED_FAVORITE, payload: newFavorites });\r\n};\r\n","export const FETCH_MOVIE_INITIATED = \"FETCH_MOVIE_INITIATED\";\r\nexport const FETCH_MOVIE_FAILED = \"FETCH_MOVIE_FAILED\";\r\nexport const FETCH_MOVIE_SUCCEEDED = \"FETCH_MOVIE_SUCCEEDED\";\r\n\r\nexport const FETCH_MOVIES_INITIATED = \"FETCH_MOVIES_INITIATED\";\r\nexport const FETCH_MOVIES_FAILED = \"FETCH_MOVIES_FAILED\";\r\nexport const FETCH_MOVIES_SUCCEEDED = \"FETCH_MOVIES_SUCCEEDED\";\r\n\r\nexport const FETCH_TRAILERS_INITIATED = \"FETCH_TRAILERS_INITIATED\";\r\nexport const FETCH_TRAILERS_FAILED = \"FETCH_TRAILERS_FAILED\";\r\nexport const FETCH_TRAILERS_SUCCEEDED = \"FETCH_TRAILERS_SUCCEEDED\";\r\nexport const SEARCH_QUERY_SUBMITTED = \"SEARCH_QUERY_SUBMITTED\";\r\n\r\nexport const FETCH_TRAILERS = \"FETCH_TRAILERS\";\r\n\r\nexport const ADDED_FAVORITE = \"ADDED_FAVORITE\";\r\nexport const REMOVED_FAVORITE = \"REMOVED_FAVORITE\";\r\n\r\nexport const VIDEO_CLICKED = \"VIDEO_CLICKED\";\r\nexport const MOVIE_CLICKED = \"MOVIE_CLICKED\";\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { fetchMovies, handleSearchSubmit } from \"../../actions\";\r\nimport { TMDB_API_KEY } from \"../../apis/tmdb/key\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst StyledForm = styled.form`\r\n  margin: ${props => (props.inlineForm ? \"-.25em 1.15em 0 1.15em\" : \"0 1em\")};\r\n  height: 0.9em;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: ${props => (props.inlineForm ? \"4.5em\" : \"20em\")};\r\n  height: ${props => (props.inlineForm ? \"\" : \"2em\")};\r\n  transition: all 0.4s ease-in-out;\r\n  background: #151c24;\r\n  padding: 0.25em 0.75em;\r\n  border: 2px solid black;\r\n  border-radius: 1.5em;\r\n  outline: none;\r\n  color: white;\r\n  font-family: inherit;\r\n  margin: 0;\r\n\r\n  :focus {\r\n    border-color: #2769b4;\r\n  }\r\n\r\n  ::placeholder {\r\n    font-size: 0.85em;\r\n    color: rgb(225, 225, 225);\r\n  }\r\n\r\n  @media screen and (max-width: 900px) {\r\n    width: ${props => (props.inlineForm ? \"3em\" : \"40vw\")};\r\n    height: ${props => (props.inlineForm ? \"\" : \"1.5em\")};\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    width: ${props => (props.inlineForm ? \"3em\" : \"40vw\")};\r\n    height: ${props => (props.inlineForm ? \"\" : \"1.5em\")};\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: ${props => (props.inlineForm ? \"1.8em\" : \"2.75em\")};\r\n  height: ${props => (props.inlineForm ? \"1.8em\" : \"2.75em\")};\r\n  border-radius: 50%;\r\n  border: 2px solid black;\r\n  margin: 0 0 0 0.25em;\r\n  background: #151c24;\r\n  outline: none;\r\n\r\n  transition: all 300ms ease-in-out;\r\n  color: white;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.1);\r\n    background: #2769b4;\r\n    color: black;\r\n    border-radius: 10%;\r\n  }\r\n`;\r\n\r\nconst SearchIcon = styled(FontAwesomeIcon).attrs({ icon: faSearch })`\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 0.85em;\r\n`;\r\n\r\n// Passes query entered in Text Input into onSubmit, which takes in modified URL query as param and sends it to axiosFetch hook.\r\nconst Search = ({ inline, fetchMovies, submittedQuery }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  //! send a message along to prompt user to input something...\r\n  const handleSearchSubmit = (event, url, query, inline) => {\r\n    event.preventDefault();\r\n\r\n    if (inline) {\r\n      // Handle submitting from inline form.\r\n      // Pass along search query to be used after redirect and redirect to searchpage.\r\n      fetchMovies(url, query);\r\n      return history.push(\"/search\");\r\n    } else {\r\n      // Handle submitting when user is on search page...\r\n      return fetchMovies(url);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Pass along submitted query on redirect.\r\n    if (submittedQuery && location.pathname === \"/search\") {\r\n      setQuery(submittedQuery);\r\n    }\r\n  }, [submittedQuery, location]);\r\n\r\n  const url = `/search/movie?api_key=${TMDB_API_KEY}&language=en-US&query=${query}&page=1&include_adult=false&840`;\r\n\r\n  return (\r\n    <StyledForm\r\n      inlineForm={inline}\r\n      onSubmit={e => handleSearchSubmit(e, url, query, inline)}\r\n    >\r\n      <StyledInput\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        name=\"search\"\r\n        autoComplete=\"off\"\r\n        inlineForm={inline}\r\n        value={query}\r\n        onChange={event => setQuery(event.target.value)}\r\n      />\r\n      {console.log(inline)}\r\n      <StyledButton type=\"submit\" inlineForm={inline}>\r\n        <SearchIcon />\r\n      </StyledButton>\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    submittedQuery: state.movies.submittedQuery\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchMovies })(Search);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nimport Searchbar from \"../Helper/Searchbar\";\r\n\r\nconst StyledLink = styled(NavLink)`\r\n  border: 1px solid #7ca887;\r\n  border: none;\r\n\r\n  box-shadow: 0 0.22em #151c24;\r\n  background: none;\r\n  margin: 0em 1.15em;\r\n  padding: 0 0.5em 0.2em;\r\n  outline: none;\r\n  text-decoration: none;\r\n\r\n  font-size: 1.05em;\r\n  font-weight: 600;\r\n  transition: all 0.2s ease-in-out;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 75%;\r\n  }\r\n`;\r\n\r\nconst StyledNavbar = styled.nav`\r\n  display: flex;\r\n  /* background: linear-gradient(\r\n    to bottom,\r\n    rgba(0, 0, 0, 0.5),\r\n    rgba(0, 0, 0, 0.8)\r\n  ); */\r\n  position: absolute;\r\n  top: 0;\r\n\r\n  z-index: 999;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  background: ${props => (props.linkStyle ? \"rgba(0, 0, 0, 0.65)\" : \"none\")};\r\n\r\n  padding: 0.5em 0;\r\n\r\n  ${StyledLink} {\r\n    color: ${props => (props.linkStyle ? \"white\" : \"#7ca887\")};\r\n    box-shadow: ${props => (props.linkStyle ? \"none\" : \"0 0.22em #151c24\")};\r\n  }\r\n\r\n  @media screen and (min-width: 1824px) {\r\n    font-size: 18px;\r\n  }\r\n\r\n  @media screen and (max-width: 700px) {\r\n    font-size: 16px;\r\n    justify-content: center;\r\n\r\n    ${StyledLink} {\r\n      margin: 0 0.75em;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    justify-content: center;\r\n    font-size: 14px;\r\n\r\n    ${StyledLink} {\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 375px) {\r\n    justify-content: center;\r\n    font-size: 12px;\r\n\r\n    ${StyledLink} {\r\n      margin: 0 0.3em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Navigation = () => {\r\n  const isMobile = useMediaQuery({\r\n    query: \"(max-width: 600px)\"\r\n  });\r\n\r\n  const activeStyle = {\r\n    boxShadow: \"0em 0.2em teal\"\r\n  };\r\n\r\n  let location = useLocation();\r\n\r\n  const rootLocations = [\"/popular\", \"/upcoming\", \"/search\", \"/favorites\"];\r\n\r\n  const [linkStyle, setLinkStyle] = useState(false);\r\n\r\n  const changeLinksforLocation = location => {\r\n    if (rootLocations.find(path => path === `${location.pathname}`)) {\r\n      return setLinkStyle(false);\r\n    } else {\r\n      return setLinkStyle(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    changeLinksforLocation(location);\r\n  }, [location]);\r\n\r\n  // if route match,\r\n  // render in place searchbar that will redirect to search page and enter query...\r\n\r\n  return (\r\n    <StyledNavbar linkStyle={linkStyle}>\r\n      <StyledLink exact to=\"/popular\" activeStyle={activeStyle}>\r\n        {isMobile ? \"Popular\" : \"Popular Movies\"}\r\n      </StyledLink>\r\n      <StyledLink to=\"/upcoming\" activeStyle={activeStyle}>\r\n        {isMobile ? \"Upcoming\" : \"Upcoming Movies\"}\r\n      </StyledLink>\r\n      <StyledLink to=\"/favorites\" activeStyle={activeStyle}>\r\n        Favorites\r\n      </StyledLink>\r\n      {location.pathname === \"/search\" ? (\r\n        <StyledLink to=\"/search\" activeStyle={activeStyle}>\r\n          Search\r\n        </StyledLink>\r\n      ) : (\r\n        <Searchbar inline />\r\n      )}\r\n      {/* <StyledLink to=\"/byactor\" buttonTitle=\"Discover by Actor\"  activeStyle={activeStyle} </StyledLink> */}\r\n    </StyledNavbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Spinner5 } from \"styled-icons/icomoon/Spinner5\";\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst scale = keyframes`\r\n   0% { transform: scale(1); }\r\n    50% { transform: scale(1.2); }\r\n    100% { transform: scale(1); }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  animation: ${scale} 1.5s linear infinite;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #7ca579;\r\n`;\r\n\r\nconst Spinner = styled(Spinner5)`\r\n  animation: ${rotate} 1.25s linear infinite;\r\n  height: 4rem;\r\n  width: 4rem;\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Container>\r\n      <Spinner />\r\n      <h1>Loading Results</h1>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Delete } from \"styled-icons/material/Delete\";\r\n\r\nconst DeleteButton = styled.button`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background-color: rgba(0, 0, 0, 0.88);\r\n  color: red;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  border: none;\r\n`;\r\n\r\nconst DeleteIcon = styled(Delete)`\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.08);\r\n  }\r\n`;\r\n\r\nconst RemoveFavoriteButton = ({ onClick }) => {\r\n  return (\r\n    <DeleteButton onClick={onClick}>\r\n      <DeleteIcon />\r\n    </DeleteButton>\r\n  );\r\n};\r\n\r\nexport default RemoveFavoriteButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar, faStopwatch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { handleMovieClick, removeFavorite } from \"../../actions\";\r\nimport AltPoster from \"./posterplaceholder.jpg\";\r\nimport RemoveFavoriteButton from \"../Helper/RemoveFavoriteButton\";\r\n\r\nconst CardContainer = styled.div`\r\n  position: relative;\r\n  flex: 0 0 calc(10% - 40px);\r\n  margin: 36px 20px;\r\n  display: flex;\r\n\r\n  /* margin: 1.55vw 1vw; */\r\n\r\n  border-radius: 10px 10px 0 0;\r\n  transition: transform ease 300ms;\r\n\r\n  color: white;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.08);\r\n  }\r\n\r\n  @media screen and (max-width: 3000px) {\r\n    flex: 0 0 calc(14.2857% - 36px);\r\n    margin: 24px 18px;\r\n  }\r\n\r\n  @media screen and (max-width: 1921px) {\r\n    flex: 0 0 calc(16.6667% - 28px);\r\n    margin: 22px 14px;\r\n  }\r\n\r\n  @media screen and (max-width: 1440px) {\r\n    flex: 0 0 calc(20% - 20px);\r\n    margin: 15px 10px;\r\n  }\r\n\r\n  @media screen and (max-width: 1025px) {\r\n    flex: 0 0 calc(25% - 16px);\r\n    margin: 10px 8px;\r\n  }\r\n\r\n  @media screen and (max-width: 779px) {\r\n    flex: 0 0 calc(33.33% - 16px);\r\n    margin: 10px 8px;\r\n  }\r\n\r\n  @media screen and (max-width: 361px) {\r\n    /* flex: 1 0 33%; */\r\n    flex: 0 0 calc(50% - 10px);\r\n    margin: 10px 5px;\r\n  }\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledRuntime = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  margin: 0.25rem;\r\n  padding: 0.3rem;\r\n  border-radius: 10%;\r\n  background-color: rgba(0, 0, 0, 0.808);\r\n`;\r\n\r\nconst RuntimeIcon = styled(FontAwesomeIcon).attrs({ icon: faStopwatch })`\r\n  font-size: 1em;\r\n  margin: 0 0.25rem 0 0;\r\n`;\r\n\r\nconst StyledRating = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  margin: 0.25rem;\r\n  padding: 0.3rem;\r\n  border-radius: 10%;\r\n  background-color: rgba(0, 0, 0, 0.808);\r\n`;\r\n\r\nconst RatingIcon = styled(FontAwesomeIcon).attrs({ icon: faStar })`\r\n  color: gold;\r\n  margin: 0 0.25rem 0 0;\r\n`;\r\n\r\nconst MovieCard = props => {\r\n  const { path } = useRouteMatch();\r\n\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 640px)\" });\r\n\r\n  const { poster_path, title, vote_average, id } = props.movie;\r\n\r\n  let runtime;\r\n  if (props.movie.details) {\r\n    runtime = props.movie.details.runtime;\r\n  } else {\r\n    runtime = props.movie.runtime;\r\n  }\r\n\r\n  const imageURL = `https://image.tmdb.org/t/p/w780${poster_path}`;\r\n\r\n  const convertRuntime = num => {\r\n    let hours = num / 60;\r\n    let rhours = Math.floor(hours);\r\n    let minutes = (hours - rhours) * 60;\r\n    let rminutes = Math.round(minutes);\r\n    return rhours + \"h \" + rminutes + \"m\";\r\n  };\r\n\r\n  const convertedRuntime = convertRuntime(runtime);\r\n\r\n  let renderRuntime;\r\n  if (!isMobile && runtime !== 0) {\r\n    renderRuntime = (\r\n      <StyledRuntime>\r\n        <RuntimeIcon />\r\n        {convertedRuntime}\r\n      </StyledRuntime>\r\n    );\r\n  }\r\n\r\n  let renderRating;\r\n  if (!isMobile && vote_average !== 0) {\r\n    renderRating = (\r\n      <StyledRating>\r\n        <RatingIcon />\r\n        {vote_average}\r\n      </StyledRating>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CardContainer>\r\n      <StyledImg\r\n        src={poster_path ? imageURL : AltPoster}\r\n        onClick={() => props.handleMovieClick(id, path)}\r\n        alt={`${title} poster`}\r\n      />\r\n      {renderRuntime}\r\n      {renderRating}\r\n      {props.removeMode && (\r\n        <RemoveFavoriteButton\r\n          onClick={() => props.removeFavorite(props.movie)}\r\n        />\r\n      )}\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default connect(null, { handleMovieClick, removeFavorite })(MovieCard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nconst MovieContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  padding: 3em 3.5em;\r\n\r\n  @media screen and (max-width: 3000px) {\r\n    padding: 2em 2.5em;\r\n  }\r\n\r\n  @media screen and (max-width: 2000px) {\r\n    padding: 2em 2.5em;\r\n  }\r\n\r\n  @media screen and (max-width: 1440px) {\r\n    padding: 1.5em;\r\n  }\r\n\r\n  @media screen and (max-width: 1025px) {\r\n    padding: 1em 0.65em;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    padding: 0.35em;\r\n  }\r\n\r\n  @media screen and (max-width: 361px) {\r\n    padding: 0.25em;\r\n  }\r\n`;\r\n\r\nconst MovieList = ({ movies }) => {\r\n  const renderMovieCards = movies.map(movie => (\r\n    <MovieCard key={movie.id} movie={movie}></MovieCard>\r\n  ));\r\n\r\n  return <MovieContainer>{renderMovieCards}</MovieContainer>;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    movies: state.movies.movies\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MovieList);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { fetchMovies } from \"../actions\";\r\nimport { TMDB_API_KEY } from \"../apis/tmdb/key\";\r\nimport Loader from \"../components/Helper/Loader\";\r\nimport MovieList from \"../components/movielist/MovieList\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 4em;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    margin-top: 3em;\r\n  }\r\n`;\r\n\r\nconst PageText = styled.h1`\r\n  font-size: 1em;\r\n  margin: 0 6em;\r\n  color: #7ca579;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    margin: 1em;\r\n  }\r\n`;\r\n\r\nconst PopularMovies = ({ isError, isLoading, fetchMovies }) => {\r\n  const url = `/discover/movie?api_key=${TMDB_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`;\r\n\r\n  useEffect(() => {\r\n    fetchMovies(url);\r\n  }, [fetchMovies, url]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PageText>Currently trending movies.</PageText>\r\n      {isError && <div>An error occured, please try again.</div>}\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <MovieList />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isError: state.movies.isError,\r\n    isLoading: state.movies.isLoading\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchMovies })(PopularMovies);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { TMDB_API_KEY } from \"../apis/tmdb/key\";\r\n\r\nimport { fetchMovies } from \"../actions\";\r\nimport Loader from \"../components/Helper/Loader\";\r\nimport MovieList from \"../components/movielist/MovieList\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 4em;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    margin-top: 3em;\r\n  }\r\n`;\r\n\r\nconst PageText = styled.h1`\r\n  font-size: 1em;\r\n  margin: 0 6em;\r\n  color: #7ca579;\r\n`;\r\n\r\nconst ErrorText = styled(PageText)`\r\n  color: #ec0312;\r\n`;\r\n\r\nconst UpcomingMovies = ({ fetchMovies, isError, isLoading }) => {\r\n  // Get date three months from now. Convert date to TMDB API's required syntax.\r\n  let currentDate = new Date();\r\n  currentDate.setDate(currentDate.getDate() + 90);\r\n  let searchDate = currentDate.toISOString().substring(0, 10);\r\n  const todayDate = new Date().toISOString().substring(0, 10);\r\n\r\n  const url = `/discover/movie?api_key=${TMDB_API_KEY}&language=en-US&region=US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&release_date.gte=${todayDate}&release_date.lte=${searchDate}&with_release_type=3%7C2`;\r\n\r\n  useEffect(() => {\r\n    fetchMovies(url);\r\n  }, [fetchMovies, url]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PageText>Movies releasing in the next 3 months.</PageText>\r\n      {isError && <ErrorText>An error occured, please try again.</ErrorText>}\r\n      {isLoading ? <Loader /> : <MovieList />}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isError: state.movies.isError,\r\n    isLoading: state.movies.isLoading\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchMovies })(UpcomingMovies);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Searchbar from \"../components/Helper/Searchbar\";\r\nimport Loader from \"../components/Helper/Loader\";\r\nimport MovieList from \"../components/movielist/MovieList\";\r\n\r\nconst SearchContainer = styled.div`\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n  margin: 6.5em 0 1.5em 0;\r\n\r\n  @media screen and (max-width: 1600px) {\r\n    margin: 4.5em 0 2em 0;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    margin: 4.5em 0 2em 0;\r\n  }\r\n\r\n  @media screen and (max-width: 380px) {\r\n    margin: 3.5em 0 2em 0;\r\n  }\r\n`;\r\n\r\n// import PageSwitch from \"../components/PageSwitch\";\r\n\r\nconst Search = ({ isError, isLoading }) => {\r\n  // const [{ data, isLoading }, doFetch] = useMovieData();\r\n\r\n  // defaults = [1124, 335984, 1551398,  [\"374720\", ]\r\n\r\n  return (\r\n    <>\r\n      <SearchContainer>\r\n        <Searchbar />\r\n      </SearchContainer>\r\n      {isLoading ? <Loader /> : <MovieList />}\r\n      {/* <PageSwitch incrementPage={pageData} /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isError: state.movies.isError,\r\n    isLoading: state.movies.isLoading\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Search);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport MovieList from \"../components/movielist/MovieList\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 4em;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    margin-top: 3em;\r\n  }\r\n`;\r\n\r\nconst PageText = styled.h1`\r\n  font-size: 1em;\r\n  margin: 0 6em;\r\n  color: #7ca579;\r\n`;\r\n\r\nconst RemoveModeButton = styled.button`\r\n  margin: 0.5em 0em 2em 1em;\r\n  padding: 0.5em;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.8em;\r\n  color: white;\r\n  font: inherit;\r\n  font-size: 1.1rem;\r\n  justify-self: center;\r\n  align-self: center;\r\n  transition: background 250ms ease-in-out, transform 150ms ease;\r\n  text-decoration: none;\r\n  background: #2769b4;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n\r\n    background: #008080;\r\n  }\r\n\r\n  :active {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Favorites = ({ favorites = [] }) => {\r\n  const [toggleRemove, setToggleRemove] = useState(false);\r\n\r\n  // const renderFavorites = favorites.map(movie => (\r\n  //   <MovieCard key={movie.id} movie={movie} removeMode={toggleRemove} />\r\n  // ));\r\n\r\n  return (\r\n    <Wrapper>\r\n      {console.log(favorites.length, \"favortires\")}\r\n      {favorites.length > 0 ? (\r\n        <>\r\n          <PageText>Your list of favorites!</PageText>\r\n          <ButtonContainer>\r\n            <RemoveModeButton onClick={() => setToggleRemove(!toggleRemove)}>\r\n              {toggleRemove ? \"Disable Remove Mode\" : \"Enable Remove Mode\"}\r\n            </RemoveModeButton>\r\n          </ButtonContainer>\r\n\r\n          <MovieList />\r\n        </>\r\n      ) : (\r\n        <PageText>\r\n          You have no favorites! Add favorites to quickly access them here.\r\n        </PageText>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    favorites: state.favorites.favoritesList\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Favorites);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Content = styled.div`\r\n  height: 100vh;\r\n  position: relative;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\nconst Left = styled.div`\r\n  background: black;\r\n  width: 30%;\r\n  position: relative;\r\n\r\n  ::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background-image: linear-gradient(to right, #000, transparent);\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 100%;\r\n    width: 275px;\r\n  }\r\n`;\r\n\r\nconst Right = styled.div`\r\n  background: no-repeat center url(${props => props.posterPath});\r\n  background-size: cover;\r\n\r\n  width: 70%;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  color: white;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  padding: 30px;\r\n`;\r\n\r\nconst LeftLayout = ({ children, backdropImage }) => {\r\n  return (\r\n    <Content>\r\n      <Background>\r\n        <Left></Left>\r\n        <Right\r\n          //   conditionalBgGradient={gradientChange}\r\n          posterPath={backdropImage}\r\n        ></Right>\r\n      </Background>\r\n      <ContentContainer>{children}</ContentContainer>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default LeftLayout;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Content2 = styled.div`\r\n  height: 100vh;\r\n  position: relative;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n\r\n  height: 100%;\r\n`;\r\n\r\nconst Bot = styled.div`\r\n  background: black;\r\n  height: 35%;\r\n  width: 100vw;\r\n  position: relative;\r\n\r\n  ::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background-image: linear-gradient(to top, #000, transparent);\r\n    bottom: 100%;\r\n\r\n    height: 275px;\r\n    width: 100vw;\r\n  }\r\n\r\n  @media screen and (max-width: 420px) {\r\n    height: 55%;\r\n  }\r\n`;\r\n\r\nconst Top = styled.div`\r\n  background: top center url(${props => props.posterPath});\r\n  background-size: cover;\r\n\r\n  height: 65%;\r\n  width: 100vw;\r\n`;\r\n\r\nconst ContentContainer2 = styled.div`\r\n  color: white;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nconst BottomLayout = props => {\r\n  return (\r\n    <Content2>\r\n      <Background>\r\n        <Top\r\n          // conditionalBgGradient={gradientChange}\r\n          posterPath={props.backdropImage}\r\n        ></Top>\r\n        <Bot></Bot>\r\n      </Background>\r\n      <ContentContainer2>{props.children}</ContentContainer2>\r\n    </Content2>\r\n  );\r\n};\r\n\r\nexport default BottomLayout;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, useRouteMatch } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst StyledLink = styled(NavLink)`\r\n  border: 1px solid #7ca887;\r\n  border: none;\r\n\r\n  background: none;\r\n  margin: 0 1.35em;\r\n  padding-bottom: 0.05em;\r\n  outline: none;\r\n  text-decoration: none;\r\n\r\n  font-size: 1em;\r\n  font-weight: 600;\r\n  transition: all 0.2s ease-in-out;\r\n  color: rgb(135, 135, 135);\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledNavbar = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n  position: absolute;\r\n\r\n  z-index: 999;\r\n  bottom: 0;\r\n  left: 0;\r\n  padding: 0.5em 0;\r\n\r\n  width: 100%;\r\n\r\n  background: rgba(0, 0, 0, 0.65);\r\n\r\n  @media screen and (min-width: 1824px) {\r\n    font-size: 24px;\r\n  }\r\n\r\n  @media screen and (max-width: 700px) {\r\n    font-size: 16px;\r\n    justify-content: center;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 14px;\r\n    justify-content: center;\r\n  }\r\n\r\n  @media screen and (max-width: 380px) {\r\n    font-size: 12px;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst activeStyle = {\r\n  boxShadow: \"0em 0.2em teal\",\r\n  color: \"white\"\r\n};\r\n\r\nconst Navbar = ({ backdrops, videos }) => {\r\n  const isMobile = useMediaQuery({\r\n    query: \"(max-width: 600px)\"\r\n  });\r\n\r\n  let { url } = useRouteMatch();\r\n\r\n  return (\r\n    <StyledNavbar>\r\n      {console.log(videos, \"videos\")}\r\n\r\n      <StyledLink exact to={`${url}/details`} activeStyle={activeStyle}>\r\n        Details\r\n      </StyledLink>\r\n      <StyledLink to={`${url}/credits`} activeStyle={activeStyle}>\r\n        Cast & Crew\r\n      </StyledLink>\r\n      {backdrops.length > 0 && (\r\n        <StyledLink to={`${url}/images`} activeStyle={activeStyle}>\r\n          Images\r\n        </StyledLink>\r\n      )}\r\n      {videos.length > 0 && (\r\n        <StyledLink to={`${url}/videos`} activeStyle={activeStyle}>\r\n          Videos\r\n        </StyledLink>\r\n      )}\r\n      {/* <StyledLink to={`${url}/recommended`} activeStyle={activeStyle}>\r\n        More Like This...\r\n      </StyledLink> */}\r\n    </StyledNavbar>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    backdrops: state.movie.images.backdrops,\r\n    videos: state.movie.videos.results\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Plus } from \"styled-icons/fa-solid/Plus\";\r\n\r\nconst AddButton = styled.button`\r\n  margin: 0.5rem;\r\n  padding: 0.3rem 0.5rem;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.8em;\r\n  color: white;\r\n  font-size: 1.1rem;\r\n  transition: background 250ms ease-in-out, transform 150ms ease;\r\n  text-decoration: none;\r\n  background: #2769b4;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background: #008080;\r\n  }\r\n\r\n  :active {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst PlusIcon = styled(Plus)`\r\n  color: white;\r\n  width: 1.1em;\r\n  height: 1.1em;\r\n  margin: 0em 0.35em;\r\n`;\r\n\r\nconst AddFavoriteButton = props => {\r\n  return (\r\n    <>\r\n      <AddButton onClick={props.onClick}>\r\n        <PlusIcon />\r\n        {props.icon}\r\n        {props.title}\r\n      </AddButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddFavoriteButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Play } from \"styled-icons/fa-solid/Play\";\r\n\r\n// import ReactPlayer from \"react-player\";\r\n\r\nconst PlayButton = styled.button`\r\n  margin: 0.5rem;\r\n  padding: 0.3rem 0.5rem;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.8em;\r\n  color: white;\r\n  font-size: 1.1em;\r\n  transition: background 250ms ease-in-out, transform 150ms ease;\r\n  text-decoration: none;\r\n  background: #2769b4;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background: #008080;\r\n  }\r\n\r\n  :active {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst PlayIcon = styled(Play)`\r\n  color: white;\r\n  width: 1em;\r\n  margin: 0em 0.35em;\r\n`;\r\n\r\n// TMDB API returns a section of YouTube URL to specify the trailer for the respective movie.\r\nconst Trailer = ({ urlKey }) => {\r\n  const url = `https://www.youtube.com/watch?v=${urlKey}`;\r\n\r\n  return (\r\n    <>\r\n      <PlayButton onClick={() => window.open(url, \"_blank\")}>\r\n        <PlayIcon />\r\n        Watch Trailer\r\n      </PlayButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trailer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Plus } from \"styled-icons/fa-solid/Plus\";\r\n\r\nconst AddButton = styled.button`\r\n  margin: 0.5rem;\r\n  padding: 0.3rem 0.5rem;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.8em;\r\n  color: white;\r\n  font-size: 1.1em;\r\n  transition: background 250ms ease-in-out, transform 150ms ease;\r\n  text-decoration: none;\r\n  background: #2769b4;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background: #008080;\r\n  }\r\n\r\n  :active {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst PlusIcon = styled(Plus)`\r\n  color: white;\r\n  width: 1.1em;\r\n  height: 1.1em;\r\n  margin: 0em 0.35em;\r\n`;\r\n\r\nconst AddFavoriteButton = props => {\r\n  return (\r\n    <>\r\n      <AddButton onClick={props.onClick}>\r\n        <PlusIcon />\r\n        Add to List\r\n      </AddButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddFavoriteButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport * as S from \"./styles\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addFavorite, removeFavorite } from \"../../actions\";\r\n\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { ChevronLeft } from \"styled-icons/material/ChevronLeft\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar, faStopwatch } from \"@fortawesome/free-solid-svg-icons\";\r\n// import { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport moment from \"moment\";\r\n\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport Button from \"../Helper/Button\";\r\nimport Trailer from \"../Helper/Trailer\";\r\nimport AddFavoriteButton from \"../Helper/AddFavoriteButton\";\r\n\r\n// import ExpandButton from \"../components/ExpandButton\";\r\n\r\nconst MasterContainer = styled.div`\r\n  background: linear-gradient(\r\n      270deg,\r\n      rgba(0, 0, 0, 0) 0%,\r\n      rgba(0, 0, 0, 0.35) 50%,\r\n      rgba(0, 0, 0, 0.92) 60%,\r\n      rgba(0, 0, 0, 1) 100%\r\n    ),\r\n    no-repeat center center url(${props => props.posterPath});\r\n  background-size: cover;\r\n  height: 100vh;\r\n  /* box-shadow: inset 0px 0px 3em 0px rgba(0, 0, 0, 0.75);  */\r\n  font-size: 24px;\r\n  color: white;\r\n  display: flex;\r\n  background-color: #2c3949;\r\n\r\n  @media screen and (min-width: 1025px) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media screen and (min-width: 1824px) {\r\n    font-size: 22px;\r\n  }\r\n\r\n  @media screen and (min-width: 2400px) {\r\n    font-size: 30px;\r\n  }\r\n\r\n  @media screen and (min-width: 3000px) {\r\n    font-size: 45px;\r\n  }\r\n`;\r\n\r\nconst BackButton = styled(Link)`\r\n  margin: 0.5rem;\r\n  padding: 0.1em;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  color: white;\r\n  font-size: 1.5rem;\r\n  justify-self: center;\r\n  align-self: center;\r\n  transition: background 250ms ease-in-out, transform 150ms ease;\r\n  text-decoration: none;\r\n  background: #2769b4;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  :active {\r\n    transform: scale(1.1);\r\n    background: #008080;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin: 1em 0 0 0;\r\n  display: flex;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nconst DesktopBackButton = styled(BackButton)`\r\n  padding: 0.2em 0.5em 0.2em 0;\r\n`;\r\n\r\nconst LeftContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* background: linear-gradient(360deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0)); */\r\n  align-items: center;\r\n  text-align: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  flex: 1;\r\n  /* background: linear-gradient(\r\n    90deg,\r\n    rgba(0, 0, 0, 0.9) 0%,\r\n    rgba(0, 0, 0, 0.5) 80%,\r\n    rgba(0, 0, 0, 0.2) 90%,\r\n    rgba(0, 0, 0, 0) 100%\r\n  ); */\r\n  /* margin: 3em 2.5em 0 2.5em; */\r\n  padding: 0 2.5em 0 2.5em;\r\n`;\r\n\r\nconst Poster = styled.img`\r\n  width: 18em;\r\n  max-width: 100%;\r\n  height: auto;\r\n  /* box-shadow: 10px 10px 38px 19px rgba(255, 255, 255, 0.1);\r\n  filter: blur(0.0001em); */\r\n  margin: 3em 0 1em 0;\r\n`;\r\n\r\nconst CenterContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 30%;\r\n  /* background: rgba(0, 0, 0, 0.93); */\r\n\r\n  /* linear-gradient(\r\n     0%,\r\n    rgba(0, 0, 0, 0.5) 80%,\r\n    rgba(0, 0, 0, 0.2) 90%,\r\n    rgba(0, 0, 0, 0) 100%\r\n  ); */\r\n  /* box-shadow: 0 0 5px 15px rgba(0, 0, 0, 0.93); */\r\n\r\n  margin: 3em 1.5em;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    font-size: 14px;\r\n    width: calc(100% - 7em);\r\n    height: calc(100% - 3.5em);\r\n    margin: 0 3.5em 3.5em 3.5em;\r\n    justify-content: flex-end;\r\n    align-items: stretch;\r\n  }\r\n\r\n  @media screen and (max-width: 599px) {\r\n    font-size: 12px;\r\n    width: calc(100% - 3em);\r\n    height: calc(100% - 3.5em);\r\n    margin: 0 1.5em 3.5em 1.5em;\r\n    justify-content: flex-end;\r\n    align-items: stretch;\r\n  }\r\n`;\r\n\r\n// const CastContainer = styled.div`\r\n//   display: flex;\r\n//   flex-direction: row;\r\n// `;\r\n\r\nconst BottomContainer = styled.div`\r\n  display: flex;\r\n\r\n  @media screen and (max-width: 1500px) and (min-width: 1024px) {\r\n    flex-flow: column;\r\n  }\r\n`;\r\n\r\nconst DetailContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 3em 1em 1em 1em;\r\n\r\n  @media screen and (max-width: 1500px) {\r\n    margin: 0.75em auto;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  margin-bottom: 1em;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    margin-bottom: 0.5em;\r\n  }\r\n\r\n  h1 {\r\n    font-family: \"Titillium Web\", sans-serif;\r\n    font-size: 3.5em;\r\n    text-shadow: -1px -1px 1px #aaa, 0px 4px 1px rgba(0, 0, 0, 0.5),\r\n      4px 4px 5px rgba(0, 0, 0, 0.7), 0px 0px 7px rgba(0, 0, 0, 0.4);\r\n    margin: 0 0 0.25em 0;\r\n    padding: 0;\r\n\r\n    @media screen and (max-width: 1023px) {\r\n      font-size: 1.667em;\r\n    }\r\n  }\r\n\r\n  h2 {\r\n    font-size: 1.25em;\r\n    margin: 0.1em 0;\r\n  }\r\n`;\r\n\r\nconst MovieTitle = styled.h1`\r\n  font-family: \"Titillium Web\", sans-serif;\r\n  font-size: 3.5em;\r\n  text-shadow: -1px -1px 1px #aaa, 0px 4px 1px rgba(0, 0, 0, 0.5),\r\n    4px 4px 5px rgba(0, 0, 0, 0.7), 0px 0px 7px rgba(0, 0, 0, 0.4);\r\n  margin: 0.15em 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst DetailTitle = styled(MovieTitle)`\r\n  font-size: 1em;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 1em;\r\n  margin: 0;\r\n`;\r\n\r\nconst MoviePlot = styled.div`\r\n  margin-top: 3em;\r\n\r\n  h1 {\r\n    font-size: 1.25em;\r\n    margin: 0.1em 0;\r\n  }\r\n\r\n  p {\r\n    font-size: 1em;\r\n    line-height: 1.4;\r\n    width: 85%;\r\n  }\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    margin-top: 0.5em;\r\n\r\n    p {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RuntimeIcon = styled(FontAwesomeIcon).attrs({ icon: faStopwatch })`\r\n  margin: 0 0.25rem;\r\n`;\r\n\r\nconst BackIcon = styled(ChevronLeft)`\r\n  color: white;\r\n  width: 1.1em;\r\n  height: 1.1em;\r\n  margin: 0em 0.35em;\r\n`;\r\n\r\nconst RatingIcon = styled(FontAwesomeIcon).attrs({ icon: faStar })`\r\n  margin: 0 0.25rem;\r\n`;\r\n\r\nconst TaglineText = styled.h3`\r\n  font: italic 600 1.75em \"Titillium Web\", sans-serif;\r\n  text-align: center;\r\n  max-width: 85%;\r\n  margin: 1em 1em 1em 0;\r\n\r\n  :before {\r\n    color: grey;\r\n    content: open-quote;\r\n    font-size: 2em;\r\n    line-height: 0.1em;\r\n    margin-right: 0.2em;\r\n    vertical-align: -0.2em;\r\n  }\r\n\r\n  :after {\r\n    color: grey;\r\n    content: close-quote;\r\n    font-size: 2em;\r\n    line-height: 0.1em;\r\n    margin-left: 0.1em;\r\n    vertical-align: -0.2em;\r\n  }\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    text-align: left;\r\n    font-size: 1.5em;\r\n  }\r\n\r\n  @media screen and (max-width: 799px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Details = ({\r\n  movie = [],\r\n  videos = [],\r\n  favorites = [],\r\n  addFavorite,\r\n  removeFavorite\r\n}) => {\r\n  let genresArray = movie ? movie.genres.map(item => item.name) : null;\r\n\r\n  const convertRuntime = num => {\r\n    let hours = num / 60;\r\n    let rhours = Math.floor(hours);\r\n    let minutes = (hours - rhours) * 60;\r\n    let rminutes = Math.round(minutes);\r\n    return rhours + \"h \" + rminutes + \"m\";\r\n  };\r\n\r\n  const convertedRuntime = movie ? convertRuntime(movie.runtime) : null;\r\n\r\n  const convertedReleaseDate = movie\r\n    ? moment(movie.release_date, \"YYYY-MM-DD\")\r\n    : null;\r\n\r\n  let isInFavorites = false;\r\n  if (favorites.find(item => item.id === movie.id)) {\r\n    isInFavorites = true;\r\n  }\r\n\r\n  const posterURL = \"https://image.tmdb.org/t/p/original\";\r\n  const mobilePosterURL = \"https://image.tmdb.org/t/p/w780\";\r\n\r\n  return (\r\n    <>\r\n      {console.log(favorites, \"videos\")}\r\n      {movie ? (\r\n        <CenterContainer>\r\n          <Header>\r\n            <h1>{movie.title}</h1>\r\n            <TaglineText>{movie.tagline}</TaglineText>\r\n            <h2>{genresArray.join(\", \")}</h2>\r\n            <div style={{ display: \"flex\", marginTop: \".35em\" }}>\r\n              {movie.runtime !== 0 && (\r\n                <>\r\n                  <h2>\r\n                    <RuntimeIcon />\r\n                    {convertedRuntime}\r\n                  </h2>\r\n                </>\r\n              )}\r\n              {movie.vote_average !== 0 && (\r\n                <>\r\n                  <h2 style={{ color: \"gold\", marginLeft: \".5em\" }}>\r\n                    <RatingIcon />\r\n                    {movie.vote_average}\r\n                  </h2>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Header>\r\n          <MoviePlot>\r\n            <h1>Overview</h1>\r\n            <p>{movie.overview}</p>\r\n          </MoviePlot>\r\n\r\n          <BottomContainer>\r\n            <DetailContainer>\r\n              <DetailTitle>Revenue:</DetailTitle>\r\n              {movie.revenue === 0 ? (\r\n                <Text>Not Available</Text>\r\n              ) : (\r\n                <Text> {\"$ \" + movie.revenue.toLocaleString()}</Text>\r\n              )}\r\n            </DetailContainer>\r\n            <DetailContainer>\r\n              <DetailTitle>Budget:</DetailTitle>\r\n              {movie.budget === 0 ? (\r\n                <Text>Not Available</Text>\r\n              ) : (\r\n                <Text> {\"$ \" + movie.budget.toLocaleString()}</Text>\r\n              )}\r\n            </DetailContainer>\r\n            <DetailContainer>\r\n              <DetailTitle>Release Date:</DetailTitle>\r\n              <Text>{convertedReleaseDate.format(\"LL\")}</Text>\r\n            </DetailContainer>\r\n          </BottomContainer>\r\n\r\n          <ButtonContainer>\r\n            {/* {videos.results === [] ? null : (\r\n              <Trailer urlKey={videos.results[0].key} />\r\n            )} */}\r\n            {isInFavorites ? (\r\n              <Button\r\n                title={\"Remove from List\"}\r\n                onClick={() => removeFavorite(movie)}\r\n              ></Button>\r\n            ) : (\r\n              <AddFavoriteButton onClick={() => addFavorite(movie)} />\r\n            )}\r\n          </ButtonContainer>\r\n        </CenterContainer>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    movie: state.movie.movie,\r\n    videos: state.movie.videos,\r\n    favorites: state.favorites.favoritesList\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addFavorite, removeFavorite })(\r\n  Details\r\n);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport { ArrowLeftCircle } from \"styled-icons/remix-fill/ArrowLeftCircle\";\r\nimport { ArrowRightCircle } from \"styled-icons/remix-fill/ArrowRightCircle\";\r\nimport { WindowClose } from \"styled-icons/fa-regular/WindowClose\";\r\nimport history from \"../../history\";\r\n\r\n// Reuseable Modal Component, optionally Uses SemanticUI for styling and React Router History to navigate out.\r\n\r\n// Uses React Portals, requires div with id root on index.html\r\n// Takes in Props of title, content, actions, and onDismiss. EX:\r\n{\r\n  /*    <Modal\r\n        title=\"Delete Stream\"\r\n        content=\"Are you sure you want to delete this stream?\"\r\n        actions={actions}\r\n        onDismiss={() => history.push(\"/\")}\r\n      /> */\r\n}\r\n\r\n// Actions variable defined in parent, shows buttons on modal\r\n// const actions = (\r\n//   <div>\r\n//     <button className=\"ui button\">Cancel</button>\r\n//     <button className=\"ui button negative\">Delete</button>\r\n//   </div>\r\n// );\r\n\r\n// Uses history to promagatically navigate away from modal when user clicks off of modal\r\n\r\nconst ImageContainer = styled.div`\r\n  display: flex;\r\n\r\n  position: fixed;\r\n  z-index: 999;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: rgba(0, 0, 0, 0.98);\r\n  color: white;\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n  font-size: 1.5em;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  margin: auto;\r\n  position: relative;\r\n`;\r\n\r\nconst ModalImage = styled.img`\r\n  width: 70vw;\r\n\r\n  @media screen and (max-width: 1441px) {\r\n    width: 85vw;\r\n  }\r\n\r\n  @media screen and (max-width: 376px) {\r\n    width: 90vw;\r\n  }\r\n`;\r\n\r\nconst ScrollButton = styled.button`\r\n  width: 3em;\r\n\r\n  color: white;\r\n  background: none;\r\n  outline: none;\r\n  border: none;\r\n  transition: all 200ms ease;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.08);\r\n    color: rgb(185, 185, 185);\r\n  }\r\n`;\r\n\r\nconst CloseButton = styled(ScrollButton)`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`;\r\n\r\nconst Controls = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst ProgressText = styled(Heading)`\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  margin: 0.25em;\r\n`;\r\n\r\nconst ImageModal = ({\r\n  images,\r\n  clickedImage,\r\n  onModalClose,\r\n  title,\r\n  ariaLabel,\r\n  role = \"dialog\"\r\n}) => {\r\n  const fullResURL = \"https://image.tmdb.org/t/p/original\";\r\n\r\n  const [modalImageSource, setModalImageSource] = useState(clickedImage);\r\n  const [controls, setControls] = useState({ left: true, right: true });\r\n\r\n  let currentIndex = images.findIndex(\r\n    item => item.file_path === modalImageSource\r\n  );\r\n\r\n  const checkIndexes = () => {\r\n    setControls({\r\n      left: currentIndex - 1 >= 0,\r\n      right: currentIndex + 1 < images.length\r\n    });\r\n  };\r\n\r\n  const prevImage = images =>\r\n    setModalImageSource(images[currentIndex - 1].file_path);\r\n\r\n  const nextImage = images =>\r\n    setModalImageSource(images[currentIndex + 1].file_path);\r\n\r\n  const onKeyDown = ({ keyCode }) => keyCode === 27 && onModalClose();\r\n\r\n  const buttonRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    checkIndexes();\r\n\r\n    // Changes focus to Modal's Close Button.\r\n    if (buttonRef) {\r\n      buttonRef.current.focus();\r\n    }\r\n  }, [modalImageSource, currentIndex, buttonRef]);\r\n\r\n  return ReactDOM.createPortal(\r\n    <ImageContainer\r\n      onClick={onModalClose}\r\n      aria-modal=\"true\"\r\n      tabIndex=\"-1\"\r\n      role={role}\r\n      aria-label={ariaLabel}\r\n      onKeyDown={onKeyDown}\r\n    >\r\n      <Content onClick={e => e.stopPropagation()}>\r\n        <Heading>{title}</Heading>\r\n        <ModalImage src={`${fullResURL}${modalImageSource}`} />\r\n        <CloseButton\r\n          as=\"button\"\r\n          onClick={onModalClose}\r\n          aria-label=\"Close Modal\"\r\n          ref={node => (buttonRef.current = node)}\r\n        >\r\n          <WindowClose />\r\n        </CloseButton>\r\n        <Controls>\r\n          {controls.left && (\r\n            <ScrollButton onClick={() => prevImage(images)}>\r\n              <ArrowLeftCircle />\r\n            </ScrollButton>\r\n          )}\r\n          {controls.right && (\r\n            <ScrollButton onClick={() => nextImage(images)}>\r\n              <ArrowRightCircle />\r\n            </ScrollButton>\r\n          )}\r\n          <ProgressText>\r\n            {currentIndex + 1} / {images.length}\r\n          </ProgressText>\r\n        </Controls>\r\n      </Content>\r\n    </ImageContainer>,\r\n\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default ImageModal;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { useScroll } from \"react-use-gesture\";\r\n\r\nimport { ChevronsDown } from \"styled-icons/boxicons-regular/ChevronsDown\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst HorizontalContainer = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n\r\n  overflow-x: hidden;\r\n\r\n\r\n  width: calc(100% - 4em);\r\n  margin: 0 4em;\r\n\r\n  @media screen and (max-width: 801px) {\r\n    width: calc(100% - 2.5em);\r\n  margin: 0 2.5em;\r\n\r\n  }\r\n\r\n  /* margin-left: ${props => (props.scrollArrow ? \"6em\" : \"\")}; */\r\n`;\r\n\r\nconst NewScrollButton = styled.button`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  z-index: 15;\r\n\r\n  width: 4em;\r\n  background: rgba(0, 0, 0, 0.25);\r\n  border: 0;\r\n  outline: 0;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media screen and (max-width: 801px) {\r\n    width: 2.5em;\r\n  }\r\n`;\r\n\r\nconst PrevIcon = styled(ChevronsDown)`\r\n  transform: rotateZ(90deg);\r\n\r\n  color: #fff;\r\n  margin: 0 auto;\r\n\r\n  transition: all 300ms ease;\r\n`;\r\n\r\nconst NextIcon = styled(PrevIcon)`\r\n  transform: rotateZ(-90deg);\r\n`;\r\n\r\nconst ScrollLeft = styled(NewScrollButton)`\r\n  left: 0;\r\n\r\n  &:hover ${PrevIcon} {\r\n    transform: scale(1.35) rotateZ(90deg);\r\n  }\r\n`;\r\n\r\nconst ScrollRight = styled(NewScrollButton)`\r\n  right: 0;\r\n\r\n  &:hover ${NextIcon} {\r\n    transform: scale(1.35) rotateZ(-90deg);\r\n  }\r\n`;\r\n\r\nconst ComposedScrollContainer = ({ children, scrollDistance = 300 }) => {\r\n  const refContainer = useRef(null);\r\n\r\n  const [overflowPresent, setOverflowPresent] = useState(false);\r\n  const [canScrollRight, setCanScrollRight] = useState(false);\r\n  const [canScrollLeft, setCanScrollLeft] = useState(false);\r\n\r\n  const checkForOverflow = () => {\r\n    const { scrollWidth, clientWidth } = refContainer.current;\r\n    const hasOverflow = scrollWidth > clientWidth;\r\n\r\n    setOverflowPresent(hasOverflow);\r\n    console.log(\"overflow checked\", hasOverflow);\r\n  };\r\n\r\n  const checkForScrollPosition = () => {\r\n    const { scrollLeft, scrollWidth, clientWidth } = refContainer.current;\r\n\r\n    setCanScrollLeft(scrollLeft > 0);\r\n    setCanScrollRight(scrollLeft !== scrollWidth - clientWidth);\r\n  };\r\n\r\n  const debounceCheckForOverflow = debounce(checkForOverflow, 1000);\r\n  const debounceCheckForScrollPosition = debounce(checkForScrollPosition, 500);\r\n\r\n  const scrollContainerBy = distance => {\r\n    refContainer.current.scrollBy({ left: distance, behavior: \"smooth\" });\r\n  };\r\n\r\n  const [style, set] = useSpring(() => ({\r\n    transform: \"perspective(500px) rotateY(0deg)\"\r\n  }));\r\n\r\n  const clamp = (value: num, clampAt: num = 30) => {\r\n    if (value > 0) {\r\n      return value > clampAt ? clampAt : value;\r\n    } else {\r\n      return value < -clampAt ? -clampAt : value;\r\n    }\r\n  };\r\n\r\n  const bind = useScroll(event => {\r\n    set({\r\n      transform: `perspective(500px) rotateY(${\r\n        event.scrolling ? clamp(event.delta[0]) : 0\r\n      }deg)`\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    checkForOverflow();\r\n    checkForScrollPosition();\r\n    refContainer.current.addEventListener(\r\n      \"scroll\",\r\n      debounceCheckForScrollPosition\r\n    );\r\n  }, [canScrollLeft, canScrollRight]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {canScrollLeft && (\r\n        <ScrollLeft onClick={() => scrollContainerBy(-scrollDistance)}>\r\n          <PrevIcon />\r\n        </ScrollLeft>\r\n      )}\r\n\r\n      {canScrollRight && (\r\n        <ScrollRight onClick={() => scrollContainerBy(scrollDistance)}>\r\n          <NextIcon />\r\n        </ScrollRight>\r\n      )}\r\n\r\n      <HorizontalContainer\r\n        ref={node => {\r\n          refContainer.current = node;\r\n        }}\r\n        {...bind()}\r\n      >\r\n        {children}\r\n      </HorizontalContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ComposedScrollContainer;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { animated, useSpring } from \"react-spring\";\r\n\r\nimport ImageModal from \"./ImageModal\";\r\nimport ComposedScrollContainer from \"../ComposedScrollContainer\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\n//! Use scrollcontainer component...\r\n\r\nconst SpringContainer = styled(animated.div)`\r\n  flex: 0 0 calc(25% - 1.5em);\r\n\r\n  margin: 0 0.75em;\r\n\r\n  @media screen and (max-width: 1279px) {\r\n    flex: 0 0 calc(33.3333% - 1.5em);\r\n  }\r\n\r\n  @media screen and (max-width: 801px) {\r\n    flex: 0 0 calc(40% - 1em);\r\n    margin: 0 0.5em;\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    flex: 0 0 calc(50% - 1em);\r\n    margin: 0 0.5em;\r\n  }\r\n`;\r\n\r\nconst BottomContainer = styled.div`\r\n  display: flex;\r\n  align-self: flex-end;\r\n  align-items: center;\r\n  margin-bottom: 3em;\r\n  height: 35%;\r\n`;\r\n\r\nconst MovieImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  vertical-align: top;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  /* padding: 0 0.75em; */\r\n`;\r\n\r\n// const ScreenshotContainer = styled.div`\r\n//   display: flex;\r\n//   flex-flow: column;\r\n//   align-items: flex-end;\r\n//   flex: 1;\r\n//   height: 100%;\r\n\r\n//   /* background: linear-gradient(\r\n//     90deg,\r\n//     rgba(0, 0, 0, 0.9) 0%,\r\n//     rgba(0, 0, 0, 0.5) 80%,\r\n//     rgba(0, 0, 0, 0.2) 90%,\r\n//     rgba(0, 0, 0, 0) 100%\r\n//   ); */\r\n// `;\r\n\r\n// const ScreenshotGradient = styled.div`\r\n//   height: auto;\r\n//   max-height: 25%;\r\n//   flex: 1;\r\n//   width: 100%;\r\n//   background: no-repeat center/contain url(${props => props.screenshotPath});\r\n//   margin: 1em;\r\n//   /* box-shadow: 0 0.1em 0.1em rgba(0, 0, 0, 0.034),\r\n//     0 0.12em 0.22em rgba(0, 0, 0, 0.048), 0 0.5em 0.4em rgba(0, 0, 0, 0.06),\r\n//     0 1em 0.75em rgba(0, 0, 0, 0.072), 0 0.5em 0.35em rgba(0, 0, 0, 0.086),\r\n//     0 2.5em 2em rgba(0, 0, 0, 0.12); */\r\n\r\n//   border-radius: 5px;\r\n//   /* box-shadow: 10px 38px 19px rgba(255, 255, 255, 0.1); */\r\n//   /* filter: blur(0.0001em); */\r\n//   /* transition: all 300ms ease;\r\n//   &:hover {\r\n//     transform: scale(1.05);\r\n//   } */\r\n//   /* Write up animations with props to have each image ease in, one after the other. */\r\n// `;\r\n\r\n// const screenShotURL = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nconst Images = ({ backdrops = [], title = \"\" }) => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const [style, set] = useSpring(() => ({\r\n    transform: \"perspective(500px) rotateY(0deg)\"\r\n  }));\r\n\r\n  const thumbURL = \"https://image.tmdb.org/t/p/w780\";\r\n\r\n  const [imageClick, setImageClick] = useState(\"\");\r\n\r\n  let modalScrollLock;\r\n\r\n  const toggleScrollLock = bool => {\r\n    return (modalScrollLock = bool);\r\n  };\r\n\r\n  const changeFocus = ref => {\r\n    ref.focus();\r\n  };\r\n\r\n  const onModalOpen = filepath => {\r\n    setImageClick(filepath);\r\n    setModalIsOpen(true);\r\n\r\n    toggleScrollLock(true);\r\n  };\r\n\r\n  const onModalClose = () => {\r\n    setModalIsOpen(false);\r\n\r\n    toggleScrollLock(false);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {modalIsOpen && (\r\n        <ImageModal\r\n          changeFocus={changeFocus}\r\n          images={backdrops}\r\n          clickedImage={imageClick}\r\n          onModalClose={onModalClose}\r\n          title={title}\r\n          ariaLabel=\"Image dialog with next and previous button.\"\r\n        ></ImageModal>\r\n      )}\r\n      <BottomContainer>\r\n        <ComposedScrollContainer scrollDistance=\"1200\">\r\n          {backdrops.slice(0, 20).map(image => {\r\n            return (\r\n              <SpringContainer key={image.file_path} style={{ ...style }}>\r\n                <MovieImage\r\n                  src={`${thumbURL}${image.file_path}`}\r\n                  onClick={() => onModalOpen(image.file_path)}\r\n                  alt=\"Movie Images\"\r\n                />\r\n              </SpringContainer>\r\n            );\r\n          })}\r\n        </ComposedScrollContainer>\r\n      </BottomContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    backdrops: state.movie.images.backdrops,\r\n    posters: state.movie.images.posters,\r\n    title: state.movie.movie.title\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Images);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst YetAnotherDiv = styled.div`\r\n  align-self: center;\r\n  margin-top: 5.5em;\r\n\r\n  width: 40%;\r\n\r\n  @media screen and (max-width: 1279px) {\r\n    width: 80%;\r\n    margin: auto 0;\r\n  }\r\n`;\r\n\r\nconst PlayerWrapper = styled.div`\r\n  position: relative;\r\n  max-width: 100%;\r\n  height: 0;\r\n  overflow: hidden;\r\n\r\n  padding-bottom: 56.25%;\r\n\r\n  /* margin: 5em auto auto auto; */\r\n\r\n  /* @media screen and (max-width: 1279px) {\r\n    width: 90%;\r\n    margin: auto auto 0 auto;\r\n  } */\r\n`;\r\n\r\nconst VideoPlayer = styled.iframe`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst VideoDetail = ({ video }) => {\r\n  const videoSrc = `https://www.youtube.com/embed/${video.id}`;\r\n\r\n  return (\r\n    <YetAnotherDiv>\r\n      <PlayerWrapper>\r\n        <VideoPlayer\r\n          title=\"video player\"\r\n          src={videoSrc}\r\n          allowFullScreen\r\n          frameBorder=\"0\"\r\n        ></VideoPlayer>\r\n      </PlayerWrapper>\r\n    </YetAnotherDiv>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    video: state.trailers.clickedVideo\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(VideoDetail);\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\nimport { useScroll } from \"react-use-gesture\";\r\nimport { ArrowLeftCircle } from \"styled-icons/remix-fill/ArrowLeftCircle\";\r\nimport { ArrowRightCircle } from \"styled-icons/remix-fill/ArrowRightCircle\";\r\n\r\nimport { ChevronsDown } from \"styled-icons/boxicons-regular/ChevronsDown\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  margin: auto 0 2em 0;\r\n  position: relative;\r\n`;\r\n\r\nconst LeftScroll = styled(ArrowLeftCircle)`\r\n  width: 4em;\r\n  margin-right: 2em;\r\n  align-self: center;\r\n  transition: all 300ms ease;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.08);\r\n    color: rgb(185, 185, 185);\r\n  }\r\n`;\r\n\r\nconst HorizontalContainer = styled.div`\r\n  display: flex;\r\n  overflow-x: hidden;\r\n  width: 100%;\r\n  \r\n  /* margin-left: ${props => (props.scrollArrow ? \"6em\" : \"\")}; */\r\n  padding: 20px 0;\r\n\r\n`;\r\n\r\nconst ScrollButton = styled.button`\r\n  width: 4em;\r\n  color: white;\r\n  background: none;\r\n  outline: none;\r\n  border: none;\r\n  transition: all 200ms ease;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.08);\r\n    color: rgb(185, 185, 185);\r\n  }\r\n`;\r\n\r\nconst NewScrollButton = styled.button`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  ${props => props.direction === \"left\" && \"left: 0\"}\r\n\r\n  ${props => props.direction === \"right\" && \"right: 0\"}\r\n\r\n  width: 2.5em;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 0;\r\n  margin: 1em 0;\r\n  z-index: 4;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  /* \r\n  span {\r\n    width: 25px;\r\n    color: #fff;\r\n    display: block;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  &--next {\r\n    right: 0;\r\n\r\n    span {\r\n      transform: rotateZ(-90deg);\r\n    }\r\n  }\r\n\r\n  &--prev {\r\n    left: 0;\r\n\r\n    span {\r\n      transform: rotateZ(90deg);\r\n    }\r\n  }\r\n} */\r\n`;\r\n\r\nconst PrevIcon = styled(ChevronsDown)`\r\n  transform: rotateZ(90deg);\r\n  left: 0;\r\n  color: #fff;\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst NextIcon = styled(PrevIcon)`\r\n  transform: rotateZ(-90deg);\r\n  left: 0;\r\n`;\r\n\r\nconst AnimatedCastCard = styled(animated.div)`\r\n  margin: 1em 1.5em;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n\r\n  :first-child {\r\n    margin: 1em 1.5em 1em 0;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst CastImg = styled.img`\r\n  border-radius: 15px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  max-height: 10em;\r\n  height: 6.5em;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  margin: 0.5em 0;\r\n`;\r\n\r\nconst ScrollContainer = ({ children, scrollDistance = 300 }) => {\r\n  const refContainer = useRef(null);\r\n\r\n  const [overflowPresent, setOverflowPresent] = useState(false);\r\n  const [canScrollRight, setCanScrollRight] = useState(false);\r\n  const [canScrollLeft, setCanScrollLeft] = useState(false);\r\n\r\n  const checkForOverflow = () => {\r\n    const { scrollWidth, clientWidth } = refContainer.current;\r\n    const hasOverflow = scrollWidth > clientWidth;\r\n\r\n    setOverflowPresent(hasOverflow);\r\n    console.log(\"overflow checked\", hasOverflow);\r\n  };\r\n\r\n  const checkForScrollPosition = () => {\r\n    const { scrollLeft, scrollWidth, clientWidth } = refContainer.current;\r\n\r\n    setCanScrollLeft(scrollLeft > 0);\r\n    setCanScrollRight(scrollLeft !== scrollWidth - clientWidth);\r\n  };\r\n\r\n  const debounceCheckForOverflow = debounce(checkForOverflow, 1000);\r\n  const debounceCheckForScrollPosition = debounce(checkForScrollPosition, 500);\r\n\r\n  const scrollContainerBy = distance => {\r\n    refContainer.current.scrollBy({ left: distance, behavior: \"smooth\" });\r\n  };\r\n\r\n  const [style, set] = useSpring(() => ({\r\n    transform: \"perspective(500px) rotateY(0deg)\"\r\n  }));\r\n\r\n  const clamp = (value: num, clampAt: num = 30) => {\r\n    if (value > 0) {\r\n      return value > clampAt ? clampAt : value;\r\n    } else {\r\n      return value < -clampAt ? -clampAt : value;\r\n    }\r\n  };\r\n\r\n  const bind = useScroll(event => {\r\n    set({\r\n      transform: `perspective(500px) rotateY(${\r\n        event.scrolling ? clamp(event.delta[0]) : 0\r\n      }deg)`\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    checkForOverflow();\r\n    checkForScrollPosition();\r\n    refContainer.current.addEventListener(\r\n      \"scroll\",\r\n      debounceCheckForScrollPosition\r\n    );\r\n  }, [canScrollLeft, canScrollRight]);\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <Wrapper>\r\n          {canScrollLeft && (\r\n            <NewScrollButton\r\n              direction=\"left\"\r\n              onClick={() => scrollContainerBy(-scrollDistance)}\r\n            >\r\n              <PrevIcon />\r\n            </NewScrollButton>\r\n          )}\r\n\r\n          <HorizontalContainer\r\n            ref={node => {\r\n              refContainer.current = node;\r\n            }}\r\n            {...bind()}\r\n            scrollArrow={!canScrollLeft}\r\n          >\r\n            {children}\r\n          </HorizontalContainer>\r\n\r\n          {canScrollRight && (\r\n            <NewScrollButton\r\n              direction=\"right\"\r\n              onClick={() => scrollContainerBy(scrollDistance)}\r\n            >\r\n              <NextIcon />\r\n            </NewScrollButton>\r\n          )}\r\n        </Wrapper>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScrollContainer;\r\n","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { onVideoSelect } from \"../../../actions\";\r\n\r\nimport { PlayCircle } from \"styled-icons/fa-regular/PlayCircle\";\r\nimport styled from \"styled-components\";\r\n\r\nconst VideoWrapper = styled.div`\r\n  position: relative;\r\n\r\n  flex: 1 0 15%;\r\n  padding: 1em 0;\r\n  margin: 0 0.5em;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    flex: 0 0 auto;\r\n  }\r\n`;\r\n\r\nconst VideoThumbnail = styled.img`\r\n  transition: all 300ms ease;\r\n\r\n  max-width: 280px;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst PlayButton = styled.button`\r\n  position: absolute;\r\n  width: 4em;\r\n  bottom: calc(50% - 2em);\r\n  left: calc(50% - 2em);\r\n\r\n  color: white;\r\n\r\n  background: none;\r\n  outline: none;\r\n  border: none;\r\n  transition: all 200ms ease;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.08);\r\n    background-color: rgb(250, 185, 185);\r\n  }\r\n`;\r\n\r\nconst PlayIcon = styled(PlayCircle)``;\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n  return (\r\n    <VideoWrapper onClick={() => onVideoSelect(video)}>\r\n      <VideoThumbnail\r\n        alt={video.snippet.title}\r\n        src={video.snippet.thumbnails.medium.url}\r\n      />\r\n      {/* <PlayButton onClick={() => onVideoSelect(video)}>\r\n        <PlayCircle />\r\n      </PlayButton> */}\r\n\r\n      {/* <div className=\"content\">\r\n        <div className=\"header\">{video.snippet.title}</div>\r\n      </div> */}\r\n    </VideoWrapper>\r\n  );\r\n};\r\n\r\nexport default connect(null, { onVideoSelect })(VideoItem);\r\n","import React from \"react\";\r\nimport VideoItem from \"./VideoItem\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst VideoList = ({ videos = [] }) => {\r\n  return (\r\n    <>\r\n      {videos.map(video => {\r\n        return <VideoItem key={video.id} video={video} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    videos: state.trailers.trailers\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(VideoList);\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchTrailers, onVideoSelect } from \"../../../actions\";\r\nimport Loader from \"../../Helper/Loader\";\r\n\r\nimport { ChevronDown } from \"styled-icons/boxicons-regular/ChevronDown\";\r\n\r\nimport VideoDetail from \"./VideoDetail\";\r\nimport ScrollContainer from \"../ScrollContainer\";\r\nimport ComposedScrollContainer from \"../ComposedScrollContainer\";\r\n\r\nimport VideoList from \"./VideoList\";\r\n\r\nconst VideoContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n\r\n  height: 100%;\r\n`;\r\n\r\nconst VideoHideButton = styled.button`\r\n  align-self: center;\r\n\r\n  width: 5em;\r\n  color: white;\r\n  background: none;\r\n  outline: none;\r\n  border: none;\r\n  transition: all 200ms ease;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.08);\r\n    color: rgb(185, 185, 185);\r\n  }\r\n`;\r\n\r\nconst FlexContainer = styled.div`\r\n  display: flex;\r\n  margin-top: auto;\r\n  margin-bottom: 4em;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nconst Videos = ({\r\n  videos,\r\n  trailers,\r\n  fetchTrailers,\r\n  onVideoSelect,\r\n  clickedVideo,\r\n  isLoading,\r\n  isError\r\n}) => {\r\n  const trailerKeys = videos.map(video => video.key).join(\",\");\r\n\r\n  //! RUN THIS When newpage mounts, not videos??\r\n  useEffect(() => {\r\n    fetchTrailers(trailerKeys);\r\n\r\n    // Reset Video on Component unmount\r\n    return () => {\r\n      onVideoSelect(null);\r\n    };\r\n  }, [fetchTrailers, trailerKeys, onVideoSelect]);\r\n\r\n  const url = `https://www.youtube.com/watch?v=`;\r\n\r\n  // const renderedVideoList = props.videos.map(video => {\r\n  //   return (\r\n  //     <div key={video.id}>\r\n  //       <div className=\"ui embed\">\r\n  //         <iframe title=\"video player\" src={url + video.key} />\r\n  //       </div>\r\n  //       <div className=\"ui segment\">\r\n  //         <h4 className=\"ui header\">{video.title}></h4>\r\n  //         <p>description?</p>\r\n  //       </div>\r\n  //     </div>\r\n  //   );\r\n  //   // this.setState({ video });\r\n  // });\r\n\r\n  return (\r\n    <>\r\n      {!isLoading ? (\r\n        <>\r\n          <VideoContainer>\r\n            {clickedVideo && <VideoDetail />}\r\n            {clickedVideo && (\r\n              <VideoHideButton onClick={() => onVideoSelect(null)}>\r\n                <ChevronDown />\r\n              </VideoHideButton>\r\n            )}\r\n            <FlexContainer>\r\n              <ComposedScrollContainer>\r\n                {trailers && <VideoList />}\r\n              </ComposedScrollContainer>\r\n            </FlexContainer>\r\n          </VideoContainer>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Loader />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    videos: state.movie.videos.results,\r\n    trailers: state.trailers.trailers,\r\n    clickedVideo: state.trailers.clickedVideo,\r\n    isError: state.trailers.isError,\r\n    isLoading: state.trailers.isLoading\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchTrailers, onVideoSelect })(\r\n  Videos\r\n);\r\n","export const YOUTUBE_API_KEY = process.env.REACT_APP_YOUTUBE_API_KEY;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { animated, useSpring } from \"react-spring\";\r\n\r\nimport { useScroll } from \"react-use-gesture\";\r\n\r\nimport ComposedScrollContainer from \"../ComposedScrollContainer\";\r\nimport styled from \"styled-components\";\r\n\r\nimport AltPoster from \"../../movielist/posterplaceholder.jpg\";\r\n\r\nconst Heading = styled.h1`\r\n  font-family: \"Titillium Web\", sans-serif;\r\n  font-size: 1.25em;\r\n  font-weight: 600;\r\n  text-shadow: -1px -1px 1px #aaa, 0px 4px 1px rgba(0, 0, 0, 0.5),\r\n    4px 4px 5px rgba(0, 0, 0, 0.7), 0px 0px 7px rgba(0, 0, 0, 0.4);\r\n  margin: 0 2.5em 1em 2.5em;\r\n  padding: 0;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  margin: auto 0 3.5em 0;\r\n  max-width: 65%;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    max-width: 100%;\r\n    margin-bottom: 2em;\r\n    margin-top: 1em;\r\n  }\r\n`;\r\nconst CastWrapper = styled.div``;\r\n\r\nconst AnimatedCastCard = styled(animated.div)`\r\n  /* NEEDED */\r\n\r\n  flex: 0 0 7em;\r\n  margin: 0 0.5em;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    flex: 0 0 7em;\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    flex: 0 0 7em;\r\n  }\r\n\r\n  :first-child {\r\n    /* margin: 1em 1.5em 1em 0;\r\n    align-items: center; */\r\n  }\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n  margin: 0.5em 0;\r\n`;\r\n\r\nconst CastImg = styled.img`\r\n  border-radius: 15px;\r\n  vertical-align: top;\r\n\r\n  max-width: 100%;\r\n  height: auto;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Text = styled.p`\r\n  margin: 0.5em 0;\r\n`;\r\n\r\nconst CastText = styled(Text)`\r\n  margin: 0.25em;\r\n  text-align: center;\r\n`;\r\n\r\nconst ActorText = styled(CastText)`\r\n  margin-top: 0;\r\n  color: grey;\r\n`;\r\n\r\nconst Cast = ({ cast = [] }) => {\r\n  const tempPersonURL = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n  const [style, set] = useSpring(() => ({\r\n    transform: \"perspective(500px) rotateY(0deg)\"\r\n  }));\r\n\r\n  const clamp = (value: num, clampAt: num = 30) => {\r\n    if (value > 0) {\r\n      return value > clampAt ? clampAt : value;\r\n    } else {\r\n      return value < -clampAt ? -clampAt : value;\r\n    }\r\n  };\r\n\r\n  const bind = useScroll(event => {\r\n    set({\r\n      transform: `perspective(500px) rotateY(${\r\n        event.scrolling ? clamp(event.delta[0]) : 0\r\n      }deg)`\r\n    });\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      {/* <Heading>Cast</Heading> */}\r\n\r\n      <ComposedScrollContainer>\r\n        {cast.slice(0, 15).map(person => {\r\n          return (\r\n            <AnimatedCastCard key={person.id} style={{ ...style }}>\r\n              <CastImg\r\n                src={\r\n                  person.profile_path\r\n                    ? `${tempPersonURL}${person.profile_path}`\r\n                    : AltPoster\r\n                }\r\n                alt={`Cast member: ${person.name}`}\r\n              />\r\n              <TextContainer>\r\n                <CastText>{person.character}</CastText>\r\n                <ActorText>{person.name}</ActorText>\r\n              </TextContainer>\r\n            </AnimatedCastCard>\r\n          );\r\n        })}\r\n      </ComposedScrollContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapsStateToProps = state => {\r\n  return {\r\n    cast: state.movie.credits.cast\r\n  };\r\n};\r\n\r\nexport default connect(mapsStateToProps)(Cast);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CrewContainer = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n\r\n  margin: auto 0 12em 2em;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    margin: auto 0 1em 2.5em;\r\n  }\r\n\r\n  @media screen and (max-width: 599px) {\r\n    margin: auto 0 0.75em 1.5em;\r\n  }\r\n\r\n  @media screen and (max-width: 376px) {\r\n    margin: auto 0 0.75em 3.5em;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst CrewColumn = styled(CrewContainer)`\r\n  flex-flow: column;\r\n  margin: 0 1em;\r\n\r\n  @media screen and (max-width: 399px) {\r\n    margin: 0 0.5em;\r\n  }\r\n`;\r\n\r\nconst CrewHeading = styled.h1`\r\n  font-family: \"Titillium Web\", sans-serif;\r\n  font-size: 1.1em;\r\n  font-weight: 600;\r\n  text-shadow: -1px -1px 1px #aaa, 0px 4px 1px rgba(0, 0, 0, 0.5),\r\n    4px 4px 5px rgba(0, 0, 0, 0.7), 0px 0px 7px rgba(0, 0, 0, 0.4);\r\n  margin: 0.5em 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst CrewText = styled.p`\r\n  font-size: 1em;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst MainTitle = styled.h1`\r\n  position: absolute;\r\n  left: 1em;\r\n  top: -5em;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    top: -2.5em;\r\n  }\r\n`;\r\n\r\nconst Crew = ({ crew = [] }) => {\r\n  // Styles for Cast info\r\n\r\n  // const CastPerson = {\r\n  //   fontSize: \".7em\",\r\n  //   margin: 0,\r\n  //   padding: 0,\r\n  //   textAlign: \"center\",\r\n  //   color: \"grey\"\r\n  // };\r\n\r\n  // const castLayout = cast.map((person, i) => {\r\n  //   return (\r\n  //     <CastContainer key={i}>\r\n  //       <CastImg\r\n  //         src={tempPersonURL + person.profile_path}\r\n  //         alt={`Cast member: ${person.name}`}\r\n  //       />\r\n  //       <CastText>{person.character}</CastText>\r\n  //       <CastPerson>{person.name}</CastPerson>\r\n  //     </CastContainer>\r\n  //   );\r\n  // });\r\n\r\n  const findPersonWithJob = (crew = [], jobName = \"\") => {\r\n    let searchedPerson = crew.find(person => person.job === jobName);\r\n\r\n    if (searchedPerson) {\r\n      return searchedPerson.name;\r\n    } else {\r\n      return \"Not Available\";\r\n    }\r\n  };\r\n\r\n  const director = findPersonWithJob(crew, \"Director\");\r\n\r\n  const composer = findPersonWithJob(crew, \"Original Music Composer\");\r\n\r\n  const writers = crew\r\n    .filter(person => person.job === \"Screenplay\" || person.job === \"Writer\")\r\n    .map(person => person.name)\r\n    .join(\", \");\r\n\r\n  return (\r\n    <CrewContainer>\r\n      <MainTitle>Cast & Crew</MainTitle>\r\n      <CrewColumn>\r\n        <CrewHeading>Director: </CrewHeading>\r\n        <CrewText>{director} </CrewText>\r\n      </CrewColumn>\r\n\r\n      <CrewColumn>\r\n        <CrewHeading> Screenplay: </CrewHeading>\r\n        <CrewText> {writers} </CrewText>\r\n      </CrewColumn>\r\n\r\n      <CrewColumn>\r\n        <CrewHeading>Music:</CrewHeading>\r\n        <CrewText>{composer}</CrewText>\r\n      </CrewColumn>\r\n\r\n      {/* \r\n      <CrewColumn>\r\n        <CrewHeading>Director: </CrewHeading>\r\n        <CrewText>{director} </CrewText>\r\n        <CrewHeading> Screenplay: </CrewHeading>\r\n        <CrewText> {writers} </CrewText>\r\n        <CrewHeading>Music:</CrewHeading>\r\n        <CrewText>{composer}</CrewText>\r\n      </CrewColumn> */}\r\n    </CrewContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    crew: state.movie.credits.crew\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Crew);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Cast from \"./Cast\";\r\nimport Crew from \"./Crew\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    flex-flow: column;\r\n    width: 100%;\r\n    align-items: stretch;\r\n  }\r\n\r\n  @media screen and (max-width: 499px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst Credits = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Crew />\r\n      <Cast />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Credits;\r\n","import React, { useEffect } from \"react\";\r\nimport { TMDB_API_KEY } from \"../apis/tmdb/key\";\r\nimport { fetchMovie } from \"../actions\";\r\nimport { Route, Switch, useRouteMatch, withRouter } from \"react-router-dom\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport \"typeface-roboto\";\r\n\r\nimport LeftLayout from \"../components/moviepage//layouts/LeftLayout\";\r\nimport BottomLayout from \"../components/moviepage/layouts/BottomLayout\";\r\nimport Navbar from \"../components/moviepage/Navbar\";\r\nimport Details from \"../components/moviepage/Details\";\r\nimport Images from \"../components/moviepage/images/Images\";\r\nimport Videos from \"../components/moviepage/videos/Videos\";\r\nimport Credits from \"../components/moviepage/credits/Credits\";\r\n\r\nimport Loader from \"../components/Helper/Loader\";\r\n\r\nimport AltPoster from \"../components/movielist/posterplaceholder.jpg\";\r\n\r\n//! Find a way to map\r\n\r\n//! Old Container\r\n// const MasterContainer = styled.div`\r\n//   background: ${props => props.conditionalBgGradient},\r\n//     no-repeat center center url(${props => props.posterPath});\r\n//   display: flex;\r\n//   background-size: cover;\r\n//   height: 100vh;\r\n//   /* box-shadow: inset 0px 0px 3em 0px rgba(0, 0, 0, 0.75);  */\r\n//   font-size: 24px;\r\n//   background-attachment: fixed;\r\n//   color: white;\r\n\r\n//   @media screen and (min-width: 1025px) {\r\n//     font-size: 16px;\r\n//   }\r\n\r\n//   @media screen and (min-width: 1824px) {\r\n//     font-size: 22px;\r\n//   }\r\n\r\n//   @media screen and (min-width: 2400px) {\r\n//     font-size: 30px;\r\n//   }\r\n\r\n//   @media screen and (min-width: 3000px) {\r\n//     font-size: 45px;\r\n//   }\r\n// `;\r\n\r\nconst Content = styled.div`\r\n  height: 100vh;\r\n  position: relative;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\nconst Left = styled.div`\r\n  background: black;\r\n  width: 30%;\r\n  position: relative;\r\n\r\n  ::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background-image: linear-gradient(to right, #000, transparent);\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 100%;\r\n    width: 275px;\r\n  }\r\n`;\r\n\r\nconst Right = styled.div`\r\n  background: no-repeat center url(${props => props.posterPath});\r\n  background-size: cover;\r\n\r\n  width: 70%;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  color: white;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  padding: 30px;\r\n`;\r\n\r\n//! 25%/75% Other page\r\n\r\nconst Content2 = styled.div`\r\n  height: 100vh;\r\n  position: relative;\r\n`;\r\n\r\nconst Background2 = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  height: 100%;\r\n`;\r\n\r\nconst Bot = styled.div`\r\n  background: black;\r\n  height: 30%;\r\n  width: 100vw;\r\n  position: relative;\r\n\r\n  ::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background-image: linear-gradient(to top, #000, transparent);\r\n    bottom: 100%;\r\n\r\n    height: 275px;\r\n    width: 100vw;\r\n  }\r\n`;\r\n\r\nconst Top = styled.div`\r\n  background: no-repeat center url(${props => props.posterPath});\r\n  background-size: cover;\r\n\r\n  height: 70%;\r\n  width: 100vw;\r\n`;\r\n\r\nconst ContentContainer2 = styled.div`\r\n  color: white;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  padding: 30px;\r\n`;\r\n\r\nconst MasterWrap = styled.div`\r\n  @media screen and (max-width: 799px) {\r\n  }\r\n`;\r\n\r\nconst NewMoviePage = props => {\r\n  const {\r\n    movie = \"\",\r\n    videos,\r\n    images,\r\n    credits,\r\n    clickedMovieId,\r\n    fetchMovie,\r\n    isLoading,\r\n    isError\r\n  } = props;\r\n\r\n  const isMobileOrTablet = useMediaQuery({ query: \"(max-width: 1023px)\" });\r\n\r\n  // If movieId passed into data fetch endpoint does not exist in state, just use the id from the URL.\r\n\r\n  let urlMovieId = clickedMovieId ? clickedMovieId : props.match.params.id;\r\n\r\n  const fetchUrl = `https://api.themoviedb.org/3/movie/${urlMovieId}?api_key=${TMDB_API_KEY}&&language=en-US&append_to_response=credits,videos,images&include_image_language=en,null`;\r\n\r\n  useEffect(() => {\r\n    fetchMovie(fetchUrl);\r\n  }, [fetchMovie, fetchUrl]);\r\n\r\n  let { path, url } = useRouteMatch();\r\n\r\n  const posterURL = \"https://image.tmdb.org/t/p/original\";\r\n\r\n  const ROOT_PATH = `${url}/details`;\r\n  const CREDITS_PATH = `${url}/credits`;\r\n  const IMAGES_PATH = `${url}/images`;\r\n  const VIDEOS_PATH = `${url}/videos`;\r\n\r\n  let backdropImage;\r\n\r\n  if (images && images.backdrops.length >= 4) {\r\n    switch (props.location.pathname) {\r\n      case ROOT_PATH:\r\n        backdropImage = `${posterURL}${images.backdrops[0].file_path}`;\r\n        break;\r\n\r\n      case CREDITS_PATH:\r\n        backdropImage = `${posterURL}${images.backdrops[1].file_path}`;\r\n        break;\r\n\r\n      case IMAGES_PATH:\r\n        backdropImage = `${posterURL}${images.backdrops[2].file_path}`;\r\n        break;\r\n\r\n      case VIDEOS_PATH:\r\n        backdropImage = `${posterURL}${images.backdrops[3].file_path}`;\r\n        break;\r\n\r\n      default:\r\n        backdropImage = `${posterURL}${images.backdrops[0].file_path}`;\r\n        break;\r\n    }\r\n  } else if (images && images.backdrops.length > 0) {\r\n    backdropImage = `${posterURL}${images.backdrops[0].file_path}`;\r\n  } else if (images && images.posters.length > 0) {\r\n    backdropImage = `${posterURL}${images.posters[0].file_path}`;\r\n  } else {\r\n    backdropImage = AltPoster;\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   if (movie) {\r\n  //     switch (props.location.pathname) {\r\n  //       case ROOT_PATH:\r\n  //         return setBackdropImage(\r\n  //           `${posterURL}${movie.images.backdrops[0].file_path}`\r\n  //         );\r\n\r\n  //       case CREDITS_PATH:\r\n  //         return setBackdropImage(\r\n  //           `${posterURL}${movie.images.backdrops[1].file_path}`\r\n  //         );\r\n  //       case IMAGES_PATH:\r\n  //         return setBackdropImage(\r\n  //           `${posterURL}${movie.images.backdrops[2].file_path}`\r\n  //         );\r\n  //       case VIDEOS_PATH:\r\n  //         return setBackdropImage(\r\n  //           `${posterURL}${movie.images.backdrops[3].file_path}`\r\n  //         );\r\n  //       default:\r\n  //     }\r\n  //   }\r\n  //   return () => {\r\n  //     setBackdropImage(null);\r\n  //   };\r\n  // }, [props.location]);\r\n\r\n  //! Make navbar fixed...\r\n  //! Implement page transitions...\r\n  //! When url path changes, change backgroundPath gradient and load another backdrop...\r\n\r\n  return (\r\n    <>\r\n      {!isLoading && movie ? (\r\n        <MasterWrap>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route path={`${path}/details`}>\r\n              {isMobileOrTablet ? (\r\n                <BottomLayout backdropImage={backdropImage}>\r\n                  <Details />\r\n                </BottomLayout>\r\n              ) : (\r\n                <LeftLayout backdropImage={backdropImage}>\r\n                  <Details />\r\n                </LeftLayout>\r\n              )}\r\n            </Route>\r\n            <BottomLayout backdropImage={backdropImage}>\r\n              <Route path={`${path}/credits`}>\r\n                <Credits />\r\n              </Route>\r\n              <Route path={`${path}/images`}>\r\n                <Images />\r\n              </Route>\r\n              <Route path={`${path}/videos`}>\r\n                <Videos />\r\n              </Route>\r\n            </BottomLayout>\r\n          </Switch>\r\n        </MasterWrap>\r\n      ) : (\r\n        <>\r\n          <Loader />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n{\r\n  /* {movie && videos && credits && images ? (\r\n        <MasterContainer\r\n          conditionalBgGradient={gradientChange}\r\n          posterPath={backdropImage}\r\n        >\r\n          {console.log(backdropImage)}\r\n          {console.log(clickedMovieId, \"clicked id\")}\r\n          {console.log(props.location.pathname, \"current pathname\")}\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path={`${path}`}>\r\n              <Details movie={movie} videos={videos} />\r\n            </Route>\r\n            <Route path={`${path}/credits`}>\r\n              <Credits credits={credits} />\r\n            </Route>\r\n\r\n            <Route path={`${path}/images`}>\r\n              <Images title={movie.title} images={images} />\r\n            </Route>\r\n          </Switch>\r\n          <Route path={`${path}/videos`}>\r\n            <Videos videos={videos.results} />\r\n          </Route>\r\n        </MasterContainer> */\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    movie: state.movie.movie,\r\n    images: state.movie.images,\r\n    clickedMovieId: state.movie.clickedMovieId,\r\n    isLoading: state.movie.isLoading,\r\n    isError: state.movie.isError\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { fetchMovie })(NewMoviePage)\r\n);\r\n","import { hot } from \"react-hot-loader/root\";\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport history from \"./history\";\r\nimport React from \"react\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { normalize } from \"styled-normalize\";\r\n\r\nimport Navigation from \"../components/Navigation/Navigation\";\r\nimport PopularMovies from \"../pages/PopularMovies\";\r\nimport UpcomingMovies from \"../pages/UpcomingMovies\";\r\nimport Search from \"../pages/Search\";\r\nimport Favorites from \"../pages/Favorites\";\r\nimport NewMoviePage from \"../pages/NewMoviePage\";\r\n// import DiscoverByActor from \"../pages/DiscoverByActor\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  ${normalize}\r\n\r\n  html {\r\n   \r\n    /* font-family: \"Nunito\", sans-serif; */\r\n    background-color: #2c3949;\r\n  font-family: \"Titillium Web\";  \r\n  }\r\n\r\n  body {\r\n    /* @import url(\"https://fonts.googleapis.com/css?family=Titillium+Web:400, 600i&display=swap\");\r\n    @import url(\"https://fonts.googleapis.com/css?family=Nunito&display=swap\"); */\r\n    /* padding: 0;\r\n    background-color: black; */\r\n  }\r\n`;\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Router history={history}>\r\n        <Navigation />\r\n        {/* <Route\r\n          exact\r\n          path={[\"/\", \"/upcoming\", \"/search\", \"/favorites\"]}\r\n          component={Navigation}\r\n        /> */}\r\n        <Switch>\r\n          <Redirect exact from=\"/\" to=\"/popular\" />\r\n          <Route exact path=\"/popular\" component={PopularMovies} />\r\n          <Route exact path=\"/upcoming\" component={UpcomingMovies} />\r\n          <Route exact path=\"/search\" component={Search} />\r\n          <Route exact path=\"/favorites\" component={Favorites} />\r\n          <Route\r\n            path={[\r\n              \"/popular/:id\",\r\n              \"/upcoming/:id\",\r\n              \"/search/:id\",\r\n              \"/favorites/:id\"\r\n            ]}\r\n            component={NewMoviePage}\r\n          />\r\n        </Switch>\r\n        {/* <NotFound default /> */}\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default process.env.NODE_ENV === \"development\" ? hot(App) : App;\r\n","import { ADDED_FAVORITE, REMOVED_FAVORITE } from \"../actions/types\";\r\n\r\n// Add functionality to display message on add and delete.\r\n// as well as Show delete button if it exists in favorites...\r\n\r\nconst INITIAL_STATE = {\r\n  favoritesList: []\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ADDED_FAVORITE:\r\n      return { ...state, favoritesList: action.payload };\r\n\r\n    case REMOVED_FAVORITE:\r\n      return {\r\n        ...state,\r\n        favoritesList: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_MOVIE_INITIATED,\r\n  FETCH_MOVIE_FAILED,\r\n  FETCH_MOVIE_SUCCEEDED,\r\n  MOVIE_CLICKED\r\n} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  movie: null,\r\n  credits: null,\r\n  videos: null,\r\n  images: null,\r\n  clickedMovieId: \"\",\r\n  isError: false,\r\n  isLoading: false\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_MOVIE_INITIATED:\r\n      return {\r\n        ...state,\r\n        isError: false,\r\n        isLoading: true\r\n      };\r\n\r\n    case FETCH_MOVIE_FAILED:\r\n      return {\r\n        ...state,\r\n        isError: true,\r\n        isLoading: false\r\n      };\r\n\r\n    case FETCH_MOVIE_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        movie: action.payload,\r\n        credits: { ...action.payload.credits },\r\n        videos: { ...action.payload.videos },\r\n        images: { ...action.payload.images },\r\n        isError: false,\r\n        isLoading: false\r\n      };\r\n\r\n    case MOVIE_CLICKED:\r\n      return {\r\n        ...state,\r\n        clickedMovieId: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_MOVIES_INITIATED,\r\n  FETCH_MOVIES_FAILED,\r\n  FETCH_MOVIES_SUCCEEDED,\r\n  SEARCH_QUERY_SUBMITTED\r\n} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  movies: [],\r\n  submittedQuery: \"\",\r\n  isError: false,\r\n  isLoading: false\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_MOVIES_INITIATED:\r\n      return {\r\n        ...state,\r\n        isError: false,\r\n        isLoading: true\r\n      };\r\n\r\n    case FETCH_MOVIES_FAILED:\r\n      return {\r\n        ...state,\r\n        isError: true,\r\n        isLoading: false\r\n      };\r\n\r\n    case FETCH_MOVIES_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        movies: action.payload,\r\n        isError: false,\r\n        isLoading: false\r\n      };\r\n\r\n    case SEARCH_QUERY_SUBMITTED:\r\n      return {\r\n        ...state,\r\n        submittedQuery: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_TRAILERS_INITIATED,\r\n  FETCH_TRAILERS_FAILED,\r\n  FETCH_TRAILERS_SUCCEEDED,\r\n  VIDEO_CLICKED\r\n} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  trailers: null,\r\n  clickedVideo: null,\r\n  isError: false,\r\n  isLoading: false\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_TRAILERS_INITIATED:\r\n      return {\r\n        ...state,\r\n        isError: false,\r\n        isLoading: true\r\n      };\r\n\r\n    case FETCH_TRAILERS_FAILED:\r\n      return {\r\n        ...state,\r\n        isError: true,\r\n        isLoading: false\r\n      };\r\n\r\n    case FETCH_TRAILERS_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        trailers: action.payload,\r\n        isError: false,\r\n        isLoading: false\r\n      };\r\n\r\n    case VIDEO_CLICKED:\r\n      return {\r\n        ...state,\r\n        clickedVideo: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport favoritesReducer from \"./favoritesReducer\";\r\nimport singleMovieReducer from \"./singleMovieReducer\";\r\nimport multipleMoviesReducer from \"./multipleMoviesReducer\";\r\nimport movieTrailersReducer from \"./movieTrailersReducer\";\r\n\r\nexport default combineReducers({\r\n  favorites: favoritesReducer,\r\n  movie: singleMovieReducer,\r\n  movies: multipleMoviesReducer,\r\n  trailers: movieTrailersReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, applyMiddleware(reduxThunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}